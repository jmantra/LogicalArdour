<?xml version="1.0" encoding="UTF-8"?>
<UIScripts>
  <ActionScript lua="Lua 5.3">c2NyaXB0cyA9IHt9IHNjcmlwdHNbMV0gPSB7fSBzY3JpcHRzWzFdWyJzIl0gPSAiYXJkb3VyIHtcClw5W1widHlwZVwiXSA9IFwiRWRpdG9yQWN0aW9uXCIsXApcOW5hbWUgPSBcIkRpYWxvZyBNZW51XCIsXApcOWF1dGhvciAgICAgID0gXCJKdXN0aW4gRWhybGljaG1hblwiLFwKZGVzY3JpcHRpb24gPSBbW1wKQnJpbmdzIHVwIGEgZGlhbG9nIG1lbnUgdG8gc2VsZWN0IHRyYWNrIHR5cGVzIGJhc2VkIG9uIHRlbXBsYXRlc1wKXV1cCn1cClwKZnVuY3Rpb24gZmFjdG9yeSAoKSByZXR1cm4gZnVuY3Rpb24gKHNpZ25hbCwgLi4uKVwKXApsb2NhbCBkaWFsb2dfb3B0aW9ucyA9IHtcClw5XDl7XApcOVw5XDl0eXBlID0gXCJkcm9wZG93blwiLCBrZXkgPSBcImRyb3Bkb3duXCIsIHRpdGxlID0gXCJDaG9vc2UgVHJhY2tcIiwgdmFsdWVzID1cClw5XDlcOXtcClw5XDlcOVw5W1wiQ2hvb3NlIGEgdHJhY2sgVHlwZVwiXSA9IDEsIFtcIkRydW0gVHJhY2tcIl0gPVwKXApcOVw5XDlcOXtcClw5XDlcOVw5XDlbXCJSZWQgWmVwcGxpblwiXSA9IFwicnpcIiwgW1wiQmxhY2sgUGVhcmxcIl0gPSBcImJwXCIsIFtcIk10IFBvd2VyRHJ1bWtpdCAoQWNjb3VzdGljIEtpdCB3aXRoIEdyb292ZXMpXCJdID0gXCJtdFwiLCBbXCJCbG9uZGUgQm9wXCJdID0gXCJib1wiLCBbXCJCZWF0IERSTVIgKEVsZWN0cm9uaWMgRHJ1bSBTYW1wbGVyIHdpdGggTE9UUyBvZiBraXRzKVwiXSA9IFwiYmRcIlwKXDlcOVw5XDl9LFtcIkluc3RydW1lbnRcIl0gPVwKXApcOVw5XDlcOXtcClw5XDlcOVw5XDlbXCJBQ0UgRmx1aWQgKFRyYWRpdGlvbmFsIEluc3RydW1lbnRzKVwiXSA9IFwiYWNcIiwgW1wiWnluYWRkc3ViZnggKFRyYWRpdGlvbmFsIFN5bnRoKVwiXSA9IFwiemFcIiwgW1wiU3VyZ2UgWFQgKFN5bnRoIHdpdGggYSBMT1Qgb2YgcHJlc2V0cylcIl0gPSBcInN0XCJcClw5XDlcOVw5fSxcClw5XDlcOVw5W1wiUmVjb3JkIEF1ZGlvXCJdID1cClwKXDlcOVw5XDl7XApcOVw5XDlcOVw5W1wiVm9pY2VcIl0gPSBcInZjXCIsIFtcIkd1aXRhciBvciBCYXNzXCJdID0gXCJndFwiXApcOVw5XDlcOX1cClwKXApcOVw5XDl9LFwKXDlcOVw5ZGVmYXVsdCA9IFwiQ2hvb3NlIGEgdHJhY2sgdHlwZVwiXApcOVw5fVwKXDl9XApcClw5bG9jYWwgb2QgPSBMdWFEaWFsb2cuRGlhbG9nIChcIkNob29zZSBUcmFja1wiLCBkaWFsb2dfb3B0aW9ucylcClw5bG9jYWwgcnYgPSBvZDpydW4oKVwKXApcOWlmIHJ2IGFuZCBydltcImRyb3Bkb3duXCJdID09IFwicnpcIiB0aGVuXApcOVw5cHJpbnQoXCJZb3UgY2hvc2UgUmVkIFplcHBsaW5cIilcClw5XDktLSBSZXBsYWNlIHRoZSBwYXRoIGJlbG93IHdpdGggdGhlIHBhdGggdG8geW91ciB0cmFjayB0ZW1wbGF0ZVwKXDlcOWxvY2FsIHRlbXBsYXRlX3BhdGggPSBcIi9ob21lL2ptYW4vdGVtcGxhdGVzL3JlZCB6ZXBwbGluLnRlbXBsYXRlXCJcClwKXDlcOS0tIFJlcGxhY2UgXCJUcmFjayBOYW1lXCIgd2l0aCB0aGUgbmFtZSB5b3Ugd2FudCBmb3IgeW91ciBuZXcgdHJhY2tcClw5XDlsb2NhbCB0cmFja19uYW1lID0gXCJSZWQgWmVwcGxpblwiXApcClw5XDlTZXNzaW9uOm5ld19yb3V0ZV9mcm9tX3RlbXBsYXRlICgxLCBBUkRPVVIuUHJlc2VudGF0aW9uSW5mby5tYXhfb3JkZXIsIHRlbXBsYXRlX3BhdGgsIHRyYWNrX25hbWUsIEFSRE9VUi5QbGF5bGlzdERpc3Bvc2l0aW9uLk5ld1BsYXlsaXN0KVwKXDllbmRcClwKXApcOWlmIHJ2IGFuZCBydltcImRyb3Bkb3duXCJdID09IFwiYnBcIiB0aGVuXApcOVw5cHJpbnQoXCJZb3UgcGlja2VkIEJsYWNrIFBlYXJsXCIpXApcOVw5LS0gUmVwbGFjZSB0aGUgcGF0aCBiZWxvdyB3aXRoIHRoZSBwYXRoIHRvIHlvdXIgdHJhY2sgdGVtcGxhdGVcClw5XDlsb2NhbCB0ZW1wbGF0ZV9wYXRoID0gXCIvaG9tZS9qbWFuL3RlbXBsYXRlcy9CbGFjayBQZWFybCBEcnVta2l0LnRlbXBsYXRlXCJcClwKXDlcOS0tIFJlcGxhY2UgXCJUcmFjayBOYW1lXCIgd2l0aCB0aGUgbmFtZSB5b3Ugd2FudCBmb3IgeW91ciBuZXcgdHJhY2tcClw5XDlsb2NhbCB0cmFja19uYW1lID0gXCJCbGFjayBQZWFybCBEcnVtIEtpdFwiXApcClw5XDlTZXNzaW9uOm5ld19yb3V0ZV9mcm9tX3RlbXBsYXRlICgxLCBBUkRPVVIuUHJlc2VudGF0aW9uSW5mby5tYXhfb3JkZXIsIHRlbXBsYXRlX3BhdGgsIHRyYWNrX25hbWUsIEFSRE9VUi5QbGF5bGlzdERpc3Bvc2l0aW9uLk5ld1BsYXlsaXN0KVwKXDllbmRcClwKXApcOWlmIHJ2IGFuZCBydltcImRyb3Bkb3duXCJdID09IFwibXRcIiB0aGVuXApcOVw5cHJpbnQoXCJNdCBQb3dlckRydW1raXRcIilcClw5XDktLSBSZXBsYWNlIHRoZSBwYXRoIGJlbG93IHdpdGggdGhlIHBhdGggdG8geW91ciB0cmFjayB0ZW1wbGF0ZVwKXDlcOWxvY2FsIHRlbXBsYXRlX3BhdGggPSBcIi9ob21lL2ptYW4vdGVtcGxhdGVzL01ULVBvd2VyRHJ1bUtpdC50ZW1wbGF0ZVwiXApcClw5XDktLSBSZXBsYWNlIFwiVHJhY2sgTmFtZVwiIHdpdGggdGhlIG5hbWUgeW91IHdhbnQgZm9yIHlvdXIgbmV3IHRyYWNrXApcOVw5bG9jYWwgdHJhY2tfbmFtZSA9IFwiTXQgUG93ZXJEcnVta2l0XCJcClwKXDlcOVNlc3Npb246bmV3X3JvdXRlX2Zyb21fdGVtcGxhdGUgKDEsIEFSRE9VUi5QcmVzZW50YXRpb25JbmZvLm1heF9vcmRlciwgdGVtcGxhdGVfcGF0aCwgdHJhY2tfbmFtZSwgQVJET1VSLlBsYXlsaXN0RGlzcG9zaXRpb24uTmV3UGxheWxpc3QpXApcOWVuZFwKXApcClw5aWYgcnYgYW5kIHJ2W1wiZHJvcGRvd25cIl0gPT0gXCJib1wiIHRoZW5cClw5XDlwcmludChcImJibG9uZCBib3BcIilcClw5XDktLSBSZXBsYWNlIHRoZSBwYXRoIGJlbG93IHdpdGggdGhlIHBhdGggdG8geW91ciB0cmFjayB0ZW1wbGF0ZVwKXDlcOWxvY2FsIHRlbXBsYXRlX3BhdGggPSBcIi9ob21lL2ptYW4vdGVtcGxhdGVzL0Jsb25kZSBCb3AgRHJ1bWtpdC50ZW1wbGF0ZVwiXApcClw5XDktLSBSZXBsYWNlIFwiVHJhY2sgTmFtZVwiIHdpdGggdGhlIG5hbWUgeW91IHdhbnQgZm9yIHlvdXIgbmV3IHRyYWNrXApcOVw5bG9jYWwgdHJhY2tfbmFtZSA9IFwiQmxvbmRlIEJvcCBEcnVta2l0IFwiXApcClw5XDlTZXNzaW9uOm5ld19yb3V0ZV9mcm9tX3RlbXBsYXRlICgxLCBBUkRPVVIuUHJlc2VudGF0aW9uSW5mby5tYXhfb3JkZXIsIHRlbXBsYXRlX3BhdGgsIHRyYWNrX25hbWUsIEFSRE9VUi5QbGF5bGlzdERpc3Bvc2l0aW9uLk5ld1BsYXlsaXN0KVwKXDllbmRcClwKXDlpZiBydiBhbmQgcnZbXCJkcm9wZG93blwiXSA9PSBcImJkXCIgdGhlblwKXDlcOXByaW50KFwiYmJsb25kIGJvcFwiKVwKXDlcOS0tIFJlcGxhY2UgdGhlIHBhdGggYmVsb3cgd2l0aCB0aGUgcGF0aCB0byB5b3VyIHRyYWNrIHRlbXBsYXRlXApcOVw5bG9jYWwgdGVtcGxhdGVfcGF0aCA9IFwiL2hvbWUvam1hbi90ZW1wbGF0ZXMvQmVhdERSTVIudGVtcGxhdGVcIlwKXApcOVw5LS0gUmVwbGFjZSBcIlRyYWNrIE5hbWVcIiB3aXRoIHRoZSBuYW1lIHlvdSB3YW50IGZvciB5b3VyIG5ldyB0cmFja1wKXDlcOWxvY2FsIHRyYWNrX25hbWUgPSBcIkJlYXQgRFJNUlwiXApcClw5XDlTZXNzaW9uOm5ld19yb3V0ZV9mcm9tX3RlbXBsYXRlICgxLCBBUkRPVVIuUHJlc2VudGF0aW9uSW5mby5tYXhfb3JkZXIsIHRlbXBsYXRlX3BhdGgsIHRyYWNrX25hbWUsIEFSRE9VUi5QbGF5bGlzdERpc3Bvc2l0aW9uLk5ld1BsYXlsaXN0KVwKXDllbmRcClw5XDlpZiBydiBhbmQgcnZbXCJkcm9wZG93blwiXSA9PSBcImFjXCIgdGhlblwKXDlcOXByaW50KFwiQWNlIEZsdWlkIFN5bnRoXCIpXApcOVw5LS0gUmVwbGFjZSB0aGUgcGF0aCBiZWxvdyB3aXRoIHRoZSBwYXRoIHRvIHlvdXIgdHJhY2sgdGVtcGxhdGVcClw5XDlsb2NhbCB0ZW1wbGF0ZV9wYXRoID0gXCIvaG9tZS9qbWFuL3RlbXBsYXRlcy9GbHVpZC50ZW1wbGF0ZVwiXApcClw5XDktLSBSZXBsYWNlIFwiVHJhY2sgTmFtZVwiIHdpdGggdGhlIG5hbWUgeW91IHdhbnQgZm9yIHlvdXIgbmV3IHRyYWNrXApcOVw5bG9jYWwgdHJhY2tfbmFtZSA9IFwiQWNlIEZsdWlkIFN5bnRoXCJcClwKXDlcOVNlc3Npb246bmV3X3JvdXRlX2Zyb21fdGVtcGxhdGUgKDEsIEFSRE9VUi5QcmVzZW50YXRpb25JbmZvLm1heF9vcmRlciwgdGVtcGxhdGVfcGF0aCwgdHJhY2tfbmFtZSwgQVJET1VSLlBsYXlsaXN0RGlzcG9zaXRpb24uTmV3UGxheWxpc3QpXApcOWVuZFwKXApcOVw5XDlpZiBydiBhbmQgcnZbXCJkcm9wZG93blwiXSA9PSBcInphXCIgdGhlblwKXDlcOXByaW50KFwiWnluYWRkc3ViZnhcIilcClw5XDktLSBSZXBsYWNlIHRoZSBwYXRoIGJlbG93IHdpdGggdGhlIHBhdGggdG8geW91ciB0cmFjayB0ZW1wbGF0ZVwKXDlcOWxvY2FsIHRlbXBsYXRlX3BhdGggPSBcIi9ob21lL2ptYW4vdGVtcGxhdGVzL3pmeC50ZW1wbGF0ZVwiXApcClw5XDktLSBSZXBsYWNlIFwiVHJhY2sgTmFtZVwiIHdpdGggdGhlIG5hbWUgeW91IHdhbnQgZm9yIHlvdXIgbmV3IHRyYWNrXApcOVw5bG9jYWwgdHJhY2tfbmFtZSA9IFwiWnluYWRkc3ViZnhcIlwKXApcOVw5U2Vzc2lvbjpuZXdfcm91dGVfZnJvbV90ZW1wbGF0ZSAoMSwgQVJET1VSLlByZXNlbnRhdGlvbkluZm8ubWF4X29yZGVyLCB0ZW1wbGF0ZV9wYXRoLCB0cmFja19uYW1lLCBBUkRPVVIuUGxheWxpc3REaXNwb3NpdGlvbi5OZXdQbGF5bGlzdClcClw5ZW5kXApcClw5XDlcOWlmIHJ2IGFuZCBydltcImRyb3Bkb3duXCJdID09IFwic3RcIiB0aGVuXApcOVw5cHJpbnQoXCJTdXJnZSBYVFwiKVwKXDlcOS0tIFJlcGxhY2UgdGhlIHBhdGggYmVsb3cgd2l0aCB0aGUgcGF0aCB0byB5b3VyIHRyYWNrIHRlbXBsYXRlXApcOVw5bG9jYWwgdGVtcGxhdGVfcGF0aCA9IFwiL2hvbWUvam1hbi90ZW1wbGF0ZXMvU3VyZ2UgWFQudGVtcGxhdGVcIlwKXApcOVw5LS0gUmVwbGFjZSBcIlRyYWNrIE5hbWVcIiB3aXRoIHRoZSBuYW1lIHlvdSB3YW50IGZvciB5b3VyIG5ldyB0cmFja1wKXDlcOWxvY2FsIHRyYWNrX25hbWUgPSBcIlN1cmdlIFhUXCJcClwKXDlcOVNlc3Npb246bmV3X3JvdXRlX2Zyb21fdGVtcGxhdGUgKDEsIEFSRE9VUi5QcmVzZW50YXRpb25JbmZvLm1heF9vcmRlciwgdGVtcGxhdGVfcGF0aCwgdHJhY2tfbmFtZSwgQVJET1VSLlBsYXlsaXN0RGlzcG9zaXRpb24uTmV3UGxheWxpc3QpXApcOWVuZFwKXApcOVw5XDlcOWlmIHJ2IGFuZCBydltcImRyb3Bkb3duXCJdID09IFwiZ3RcIiB0aGVuXApcOVw5cHJpbnQoXCJHdWl0YXJcIilcClw5XDktLSBSZXBsYWNlIHRoZSBwYXRoIGJlbG93IHdpdGggdGhlIHBhdGggdG8geW91ciB0cmFjayB0ZW1wbGF0ZVwKXDlcOWxvY2FsIHRlbXBsYXRlX3BhdGggPSBcIi9ob21lL2ptYW4vdGVtcGxhdGVzL25hbS50ZW1wbGF0ZVwiXApcClw5XDktLSBSZXBsYWNlIFwiVHJhY2sgTmFtZVwiIHdpdGggdGhlIG5hbWUgeW91IHdhbnQgZm9yIHlvdXIgbmV3IHRyYWNrXApcOVw5bG9jYWwgdHJhY2tfbmFtZSA9IFwiTmV1cmFsIEFtcCBNb2RlbGVyXCJcClwKXDlcOVNlc3Npb246bmV3X3JvdXRlX2Zyb21fdGVtcGxhdGUgKDEsIEFSRE9VUi5QcmVzZW50YXRpb25JbmZvLm1heF9vcmRlciwgdGVtcGxhdGVfcGF0aCwgdHJhY2tfbmFtZSwgQVJET1VSLlBsYXlsaXN0RGlzcG9zaXRpb24uTmV3UGxheWxpc3QpXApcOWVuZFwKZW5kIGVuZFwKXApcCiIgIHNjcmlwdHNbMV1bIm4iXSA9ICJEaWFsb2cgTWVudSIgIHNjcmlwdHNbMV1bImMiXSA9IHRydWUgc2NyaXB0c1sxXVsiZiJdID0gIlwyN0x1YVNcMFwyNZNcMTNcClwyNlwKXDRcOFw0XDhcOHhWXDBcMFwwXDBcMFwwXDBcMFwwXDBcMCh3QFwxXDBcClwwXDBcMIxcMFwwXDBcMFwwXDJcM1wwXDBcMCxcMFwwXDAmXDBcMFwxJlwwgFwwXDBcMFwwXDBcMVwwXDBcMFwwXDBcMVwwXDBcMFwwXApcMFwwXDCMXDBcMFwwXDFcMVwxM+hcMFwwXDBLXDCAXDCLQFwxXDCKQECAikBAgYpcMMGBy1wwXDFcMMrAQYNcMTFBXDFcMFwKgcKEXApcMcOFXAqBw4ZcClwxxIdcCoHEiMpcMFwxhFwxMcFcMFwwXApBRYpcCsFFi1wKQUaMylwwgYlcMTGBXDBcMFwKXDHHjVwKgceOylwwXDGNisCAgopcMMiPa0CAXDCGQEhcMIeASFwxwVwwXDFcMFwwXDGAXDCkgIBcMczASFwx5IBcMFwx4lwwXDBcMFwzMMBcNIBcN0HAXDFcMzGAQlwyXDMwXDBcNIBcNlwxSVwwQUFcOVwwJEFcMFwxXDGBXDlcMEFBXDJcMIbBSVwwjFwxSlwzXDHCXDFcMEZCSlwwR4LKXDRHwspcNIBcMlwwXDLAXDKAXDJcNkNKXDBcN1wzS1w2XDdDS1w2pEGAXDPiXDBcMFwwXDMwwFw0gFw3QcBcMVwzMVwwQ1wyXDMwXDBcNIBcNlwxSVwwQYFcMTFcMCRBXDBcMVwxwVwxMVwwQVwxXDEyXDCGwUlcMIxcMUpcM1wxwlwxXDBGQkpcMEeCylw0R8LKXDSAXDJcMFwywFwygFwyXDZDSlwwXDdcM0tcNlw3Q0tcNqRBgFwz4lwwXDBcMFwzMMBcNIBcN0HAXDFcMzGAQ1wyXDMwXDBcNIBcNlwxSVwwQUFcMTJcMCRBXDBcMVwxgVwxMlwwQUFcMTJcMIbBSVwwjFwxSlwzXDHCXDFcMEZCSlwwR4LKXDRHwspcNIBcMlwwXDLAXDKAXDJcNkNKXDBcN1wzS1w2XDdDS1w2pEGAXDPiXDBcMFwwXDMwwFw0gFw3QcBcMVwzMVwwRFwyXDMwXDBcNIBcNlwxSVwwQcFcMTJcMCRBXDBcMVwxXDFcMTNcMEFBXDEzXDCGwUlcMIxcMUpcM1wxwlwxXDBGQkpcMEeCylw0R8LKXDSAXDJcMFwywFwygFwyXDZDSlwwXDdcM0tcNlw3Q0tcNqRBgFwz4lwwXDBcMFwzMMBcNIBcN0HAXDFcMzGARFwyXDMwXDBcNIBcNlwxSVwwQcFcMTJcMCRBXDBcMVwxgVwxM1wwQcFcMTNcMIbBSVwwjFwxSlwzXDHCXDFcMEZCSlwwR4LKXDRHwspcNIBcMlwwXDLAXDKAXDJcNkNKXDBcN1wzS1w2XDdDS1w2pEGAXDPiXDBcMFwwXDMwwFw0gFw3QcBcMVwzMUBFXDJcMzBcMFw0gFw2XDFJXDBBXDFcMTRcMCRBXDBcMVwxQVwxNFwwQVwxXDE0XDCGwUlcMIxcMUpcM1wxwlwxXDBGQkpcMEeCylw0R8LKXDSAXDJcMFwywFwygFwyXDZDSlwwXDdcM0tcNlw3Q0tcNqRBgFwz4lwwXDBcMFwzMMBcNIBcN0HAXDFcMzHARVwyXDMwXDBcNIBcNlwxSVwwQYFcMTRcMCRBXDBcMVwxwVwxNFwwQYFcMTRcMIbBSVwwjFwxSlwzXDHCXDFcMEZCSlwwR4LKXDRHwspcNIBcMlwwXDLAXDKAXDJcNkNKXDBcN1wzS1w2XDdDS1w2pEGAXDPiXDBcMFwwXDMwwFw0gFw3QcBcMVwzMUBGXDJcMzBcMFw0gFw2XDFJXDBBXDFcMTVcMCRBXDBcMVwxQVwxNVwwQVwxXDE1XDCGwUlcMIxcMUpcM1wxwlwxXDBGQkpcMEeCylw0R8LKXDSAXDJcMFwywFwygFwyXDZDSlwwXDdcM0tcNlw3Q0tcNqRBgFwz4lwwXDBcMFwzMMBcNIBcN0HAXDFcMzGAR1wyXDMwXDBcNIBcNlwxSVwwQYFcMTVcMCRBXDBcMVwxwVwxNVwwQVwxXDE2XDCGwUlcMIxcMUpcM1wxwlwxXDBGQkpcMEeCylw0R8LKXDSAXDJcMFwywFwygFwyXDZDSlwwXDdcM0tcNlw3Q0tcNqRBgFwzJlwwgFwwQVwwXDBcMFw0XDV0eXBlXDRcOWRyb3Bkb3duXDRcNGtleVw0XDZ0aXRsZVw0XDEzQ2hvb3NlIFRyYWNrXDRcN3ZhbHVlc1w0XDIwQ2hvb3NlIGEgdHJhY2sgVHlwZVwxOVwxXDBcMFwwXDBcMFwwXDBcNFwxMURydW0gVHJhY2tcNFwxMlJlZCBaZXBwbGluXDRcM3J6XDRcMTJCbGFjayBQZWFybFw0XDNicFwyMC1NdCBQb3dlckRydW1raXQgKEFjY291c3RpYyBLaXQgd2l0aCBHcm9vdmVzKVw0XDNtdFw0XDExQmxvbmRlIEJvcFw0XDNib1wwMjA2QmVhdCBEUk1SIChFbGVjdHJvbmljIERydW0gU2FtcGxlciB3aXRoIExPVFMgb2Yga2l0cylcNFwzYmRcNFwxMUluc3RydW1lbnRcNCRBQ0UgRmx1aWQgKFRyYWRpdGlvbmFsIEluc3RydW1lbnRzKVw0XDNhY1w0IFp5bmFkZHN1YmZ4IChUcmFkaXRpb25hbCBTeW50aClcNFwzemFcNCdTdXJnZSBYVCAoU3ludGggd2l0aCBhIExPVCBvZiBwcmVzZXRzKVw0XDNzdFw0XDEzUmVjb3JkIEF1ZGlvXDRcNlZvaWNlXDRcM3ZjXDRcMTVHdWl0YXIgb3IgQmFzc1w0XDNndFw0XDhkZWZhdWx0XDRcMjBDaG9vc2UgYSB0cmFjayB0eXBlXDRcCkx1YURpYWxvZ1w0XDdEaWFsb2dcNFw0cnVuXDRcNnByaW50XDRcMjJZb3UgY2hvc2UgUmVkIFplcHBsaW5cMjAqL2hvbWUvam1hbi90ZW1wbGF0ZXMvcmVkIHplcHBsaW4udGVtcGxhdGVcNFw4U2Vzc2lvblw0XDI0bmV3X3JvdXRlX2Zyb21fdGVtcGxhdGVcNFw3QVJET1VSXDRcMTdQcmVzZW50YXRpb25JbmZvXDRcCm1heF9vcmRlclw0XDIwUGxheWxpc3REaXNwb3NpdGlvblw0XDEyTmV3UGxheWxpc3RcNFwyM1lvdSBwaWNrZWQgQmxhY2sgUGVhcmxcMDIwMi9ob21lL2ptYW4vdGVtcGxhdGVzL0JsYWNrIFBlYXJsIERydW1raXQudGVtcGxhdGVcNFwyMUJsYWNrIFBlYXJsIERydW0gS2l0XDRcMTZNdCBQb3dlckRydW1raXRcMjAuL2hvbWUvam1hbi90ZW1wbGF0ZXMvTVQtUG93ZXJEcnVtS2l0LnRlbXBsYXRlXDRcMTFiYmxvbmQgYm9wXDAyMDEvaG9tZS9qbWFuL3RlbXBsYXRlcy9CbG9uZGUgQm9wIERydW1raXQudGVtcGxhdGVcNFwyMEJsb25kZSBCb3AgRHJ1bWtpdCBcNCcvaG9tZS9qbWFuL3RlbXBsYXRlcy9CZWF0RFJNUi50ZW1wbGF0ZVw0XApCZWF0IERSTVJcNFwxNkFjZSBGbHVpZCBTeW50aFw0JC9ob21lL2ptYW4vdGVtcGxhdGVzL0ZsdWlkLnRlbXBsYXRlXDRcMTJaeW5hZGRzdWJmeFw0XCIvaG9tZS9qbWFuL3RlbXBsYXRlcy96ZngudGVtcGxhdGVcNFw5U3VyZ2UgWFRcNCcvaG9tZS9qbWFuL3RlbXBsYXRlcy9TdXJnZSBYVC50ZW1wbGF0ZVw0XDdHdWl0YXJcNFwiL2hvbWUvam1hbi90ZW1wbGF0ZXMvbmFtLnRlbXBsYXRlXDRcMTlOZXVyYWwgQW1wIE1vZGVsZXJcMVwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMCIgc2NyaXB0c1sxXVsiYSJdID0ge30gc2NyaXB0c1sxXVsiYSJdWyJ4LXNjcmlwdC1vcmlnaW4iXSA9ICIvaG9tZS9qbWFuLy5jb25maWcvYXJkb3VyNy9zY3JpcHRzL25ld3RyYWNrLmx1YSIgICAgc2NyaXB0c1syXSA9IHt9IHNjcmlwdHNbMl1bInMiXSA9ICJhcmRvdXIge1wKXDlbXCJ0eXBlXCJdID0gXCJFZGl0b3JBY3Rpb25cIixcClw5bmFtZSA9IFwiUG9seXBob25pYyBBdWRpbyB0byBNSURJXCIsXApcOWxpY2Vuc2UgICAgID0gXCJNSVRcIixcClw5YXV0aG9yICAgICAgPSBcIkFyZG91ciBUZWFtXCIsXApkZXNjcmlwdGlvbiA9IFtbXApBbmFseXplIGF1ZGlvIGZyb20gdGhlIHNlbGVjdGVkIGF1ZGlvIHJlZ2lvbiB0byBhIHNlbGVjdGVkIE1JREkgcmVnaW9uLlwKXApBIE1JREkgcmVnaW9uIG9uIHRoZSB0YXJnZXQgdHJhY2sgd2lsbCBoYXZlIHRvIGJlIGNyZWF0ZWQgZmlyc3QgKHVzZSB0aGUgcGVuIHRvb2wpLlwKXApUaGlzIHNjcmlwdCB1c2VzIHRoZSBQb2x5cGhvbmljIFRyYW5zY3JpcHRpb24gVkFNUCBwbHVnaW4gZnJvbSBRdWVlbiBNYXJ5IFVuaXYsIExvbmRvbi5cClRoZSBwbHVnaW4gd29ya3MgYmVzdCBhdCA0NC4xS0h6IGlucHV0IHNhbXBsZSByYXRlLCBhbmQgaXMgdHVuZWQgZm9yIHBpYW5vIGFuZCBndWl0YXIgbXVzaWMuIFZlbG9jaXR5IGlzIG5vdCBlc3RpbWF0ZWQuXApdXVwKfVwKXApmdW5jdGlvbiBmYWN0b3J5ICgpIHJldHVybiBmdW5jdGlvbiAoKVwKXDlsb2NhbCBzZWwgPSBFZGl0b3I6Z2V0X3NlbGVjdGlvbiAoKVwKXDlsb2NhbCBzciA9IFNlc3Npb246bm9taW5hbF9zYW1wbGVfcmF0ZSAoKVwKXDlsb2NhbCB0bSA9IFRlbXBvcmFsLlRlbXBvTWFwLnJlYWQgKClcClw5bG9jYWwgdmFtcCA9IEFSRE9VUi5MdWFBUEkuVmFtcCAoXCJsaWJhcmRvdXJ2YW1wcGx1Z2luczpxbS10cmFuc2NyaXB0aW9uXCIsIHNyKVwKXDlsb2NhbCBtaWRpX3JlZ2lvbiA9IG5pbFwKXDlsb2NhbCBhdWRpb19yZWdpb25zID0ge31cClw5bG9jYWwgc3RhcnRfdGltZSA9IFNlc3Npb246Y3VycmVudF9lbmRfc2FtcGxlICgpXApcOWxvY2FsIGVuZF90aW1lID0gU2Vzc2lvbjpjdXJyZW50X3N0YXJ0X3NhbXBsZSAoKVwKXDlsb2NhbCBtYXhfcG9zID0gMFwKXDlsb2NhbCBjdXJfcG9zID0gMFwKXDlmb3IgciBpbiBzZWwucmVnaW9uczpyZWdpb25saXN0ICgpOml0ZXIgKCkgZG9cClw5XDlsb2NhbCBhciA9IHI6dG9fYXVkaW9yZWdpb24oKVwKXDlcOWlmIG5vdCBhcjppc25pbCgpIHRoZW5cClw5XDlcOWxvY2FsIHN0ID0gcjpwb3NpdGlvbigpOnNhbXBsZXMoKVwKXDlcOVw5bG9jYWwgbG4gPSByOmxlbmd0aCgpOnNhbXBsZXMoKVwKXDlcOVw5bG9jYWwgZXQgPSBzdCArIGxuO1wKXDlcOVw5aWYgc3QgPCBzdGFydF90aW1lIHRoZW5cClw5XDlcOVw5c3RhcnRfdGltZSA9IHN0XApcOVw5XDllbmRcClw5XDlcOWlmIGV0ID4gZW5kX3RpbWUgdGhlblwKXDlcOVw5XDllbmRfdGltZSA9IGV0XApcOVw5XDllbmRcClw5XDlcOXRhYmxlLmluc2VydChhdWRpb19yZWdpb25zLCBhcilcClw5XDlcOW1heF9wb3MgPSBtYXhfcG9zICsgYXI6dG9fcmVhZGFibGUgKCk6cmVhZGFibGVfbGVuZ3RoICgpXApcOVw5ZWxzZVwKXDlcOVw5bWlkaV9yZWdpb24gPSByOnRvX21pZGlyZWdpb24oKVwKXDlcOWVuZFwKXDllbmRcClwKXDlpZiAjYXVkaW9fcmVnaW9ucyA9PSAwIHRoZW5cClw5XDlMdWFEaWFsb2cuTWVzc2FnZSAoXCJQb2x5cGhvbmljIEF1ZGlvIHRvIE1JRElcIiwgXCJObyBzb3VyY2UgYXVkaW8gcmVnaW9uKHMpIHNlbGVjdGVkLlxcbkF0IGxlYXN0IG9uZSBhdWRpby1yZWdpb24gdG8gYmUgYW5hbHl6ZWQgbmVlZCB0byBiZSBzZWxlY3RlZC5cIiwgTHVhRGlhbG9nLk1lc3NhZ2VUeXBlLkVycm9yLCBMdWFEaWFsb2cuQnV0dG9uVHlwZS5DbG9zZSk6cnVuICgpXApcOVw5cmV0dXJuXApcOWVuZFwKXDlpZiBub3QgbWlkaV9yZWdpb24gdGhlblwKXDlcOUx1YURpYWxvZy5NZXNzYWdlIChcIlBvbHlwaG9uaWMgQXVkaW8gdG8gTUlESVwiLCBcIk5vIHRhcmdldCBNSURJIHJlZ2lvbiBzZWxlY3RlZC5cXG5BIE1JREkgcmVnaW9uLCBpZGVhbGx5IGVtcHR5LCBhbmQgZXh0ZW5kaW5nIGJleW9uZCB0aGUgc2VsZWN0ZWQgYXVkaW8tcmVnaW9uKHMpIG5lZWRzIHRvIGJlIHNlbGVjdGVkLlwiLCBMdWFEaWFsb2cuTWVzc2FnZVR5cGUuRXJyb3IsIEx1YURpYWxvZy5CdXR0b25UeXBlLkNsb3NlKTpydW4gKClcClw5XDlyZXR1cm5cClw5ZW5kXApcClw5bWlkaV9yZWdpb246c2V0X2luaXRpYWxfcG9zaXRpb24gKFRlbXBvcmFsLnRpbWVwb3NfdCAoc3RhcnRfdGltZSkpXApcOW1pZGlfcmVnaW9uOnNldF9sZW5ndGggKFRlbXBvcmFsLnRpbWVjbnRfdCAoZW5kX3RpbWUgLSBzdGFydF90aW1lKSlcClwKXDlsb2NhbCBwZGlhbG9nID0gTHVhRGlhbG9nLlByb2dyZXNzV2luZG93IChcIkF1ZGlvIHRvIE1JRElcIiwgdHJ1ZSlcClw5ZnVuY3Rpb24gcHJvZ3Jlc3MgKF8sIHBvcylcClw5XDlyZXR1cm4gcGRpYWxvZzpwcm9ncmVzcyAoKGN1cl9wb3MgKyBwb3MpIC8gbWF4X3BvcywgXCJBbmFseXppbmdcIilcClw5ZW5kXApcClw5Zm9yIGksYXIgaW4gcGFpcnMoYXVkaW9fcmVnaW9ucykgZG9cClw5XDlsb2NhbCBhX29mZiA9IGFyOnBvc2l0aW9uICgpXApcOVw5bG9jYWwgYl9vZmYgPSB0bTpxdWFydGVyc19hdCAobWlkaV9yZWdpb246cG9zaXRpb24gKCkpO1wKXApcOVw5dmFtcDphbmFseXplIChhcjp0b19yZWFkYWJsZSAoKSwgMCwgcHJvZ3Jlc3MpXApcClw5XDlpZiBwZGlhbG9nOmNhbmNlbGVkICgpIHRoZW5cClw5XDlcOWdvdG8gb3V0XApcOVw5ZW5kXApcClw5XDljdXJfcG9zID0gY3VyX3BvcyArIGFyOnRvX3JlYWRhYmxlICgpOnJlYWRhYmxlX2xlbmd0aCAoKVwKXDlcOXBkaWFsb2c6cHJvZ3Jlc3MgKGN1cl9wb3MgLyBtYXhfcG9zLCBcIkdlbmVyYXRpbmcgTUlESVwiKVwKXApcOVw5bG9jYWwgZmwgPSB2YW1wOnBsdWdpbiAoKTpnZXRSZW1haW5pbmdGZWF0dXJlcyAoKTphdCAoMClcClw5XDlpZiBmbCBhbmQgZmw6c2l6ZSgpID4gMCB0aGVuXApcOVw5XDlsb2NhbCBtbSA9IG1pZGlfcmVnaW9uOm1pZGlfc291cmNlKDApOm1vZGVsKClcClw5XDlcOWxvY2FsIG1pZGlfY29tbWFuZCA9IG1tOm5ld19ub3RlX2RpZmZfY29tbWFuZCAoXCJBdWRpbzJNaWRpXCIpXApcOVw5XDlmb3IgZiBpbiBmbDppdGVyICgpIGRvXApcOVw5XDlcOWxvY2FsIGZ0ID0gVGVtcG9yYWwudGltZWNudF90IChWYW1wLlJlYWxUaW1lLnJlYWxUaW1lMkZyYW1lIChmLnRpbWVzdGFtcCwgc3IpKVwKXDlcOVw5XDlsb2NhbCBmZCA9IFRlbXBvcmFsLnRpbWVjbnRfdCAoVmFtcC5SZWFsVGltZS5yZWFsVGltZTJGcmFtZSAoZi5kdXJhdGlvbiwgc3IpKVwKXDlcOVw5XDlsb2NhbCBmbiA9IGYudmFsdWVzOmF0ICgwKVwKXApcOVw5XDlcOWxvY2FsIGJzID0gdG06cXVhcnRlcnNfYXQgKGFfb2ZmICsgZnQsIDApXApcOVw5XDlcOWxvY2FsIGJlID0gdG06cXVhcnRlcnNfYXQgKGFfb2ZmICsgZnQgKyBmZCwgMClcClw5XDlcOVw5cHJpbnQgKFwiTlwiLCBicywgYmUsIGZuICsgMSlcClwKXDlcOVw5XDlsb2NhbCBwb3MgPSBicyAtIGJfb2ZmXApcOVw5XDlcOWxvY2FsIGxlbiA9IGJlIC0gYnNcClw5XDlcOVw5bG9jYWwgbm90ZSA9IEFSRE9VUi5MdWFBUEkubmV3X25vdGVwdHIgKDEsIHBvcywgbGVuLCBmbiArIDEsIDB4N2YpXApcOVw5XDlcOW1pZGlfY29tbWFuZDphZGQgKG5vdGUpXApcOVw5XDllbmRcClw5XDlcOW1tOmFwcGx5X2NvbW1hbmQgKFNlc3Npb24sIG1pZGlfY29tbWFuZClcClw5XDllbmRcClw5XDktLSByZXNldCB0aGUgcGx1Z2luIChwcmVwYXJlIGZvciBuZXh0IGl0ZXJhdGlvbilcClw5XDl2YW1wOnJlc2V0ICgpXApcOWVuZFwKXApcOTo6b3V0OjpcClw5cGRpYWxvZzpkb25lICgpO1wKZW5kIGVuZFwKXApmdW5jdGlvbiBpY29uIChwYXJhbXMpIHJldHVybiBmdW5jdGlvbiAoY3R4LCB3aWR0aCwgaGVpZ2h0LCBmZylcClw5bG9jYWwgdHh0ID0gQ2Fpcm8uUGFuZ29MYXlvdXQgKGN0eCwgXCJBcmRvdXJNb25vIFwiLi4gbWF0aC5jZWlsKHdpZHRoICogLjcpIC4uIFwicHhcIilcClw5dHh0OnNldF90ZXh0IChcIlxcdXsyNjY5fVwiKSAtLSBxdWFydGVyIG5vdGUgc3ltYm9sIFVURjhcClw5bG9jYWwgdHcsIHRoID0gdHh0OmdldF9waXhlbF9zaXplICgpXApcOWN0eDpzZXRfc291cmNlX3JnYmEgKEFSRE9VUi5MdWFBUEkuY29sb3JfdG9fcmdiYSAoZmcpKVwKXDljdHg6bW92ZV90byAoLjUgKiAod2lkdGggLSB0dyksIC41ICogKGhlaWdodCAtIHRoKSlcClw5dHh0OnNob3dfaW5fY2Fpcm9fY29udGV4dCAoY3R4KVwKZW5kIGVuZFwKIiAgc2NyaXB0c1syXVsibiJdID0gIlBvbHlwaG9uaWMgQXVkaW8gdG8gTUlESSIgIHNjcmlwdHNbMl1bImMiXSA9ICJcMjdMdWFTXDBcMjWTXDEzXApcMjZcClw0XDhcNFw4XDh4VlwwXDBcMFwwXDBcMFwwXDBcMFwwXDAod0BcMVwwaFwwXDBcMG9cMFwwXDBcMVwwXDJcM1wwXDBcMGxcMFwwXDBmXDBcMFwxJlwwgFwwXDBcMFwwXDBcMVwwXDBcMFwwXDBcMVwwXDBcMFwwaFwwXDBcMG9cMFwwXDBcNFwwXDExIVwwXDBcMFw2XDFAXDBcN0FAXDJAXDFcMFwwgYFcMFwwxsFAXDDHXDHBXDNcMTVCwVww5IFcMFwxXDGCXDFcMJ1cMVwyXDMkgYBcMUzBQVwywVwxXDJcMGRBgFwxTEFCXDJkwVwwXDHMgUJcMEbCQlwwR1wyw1w0R0LDXDSAXDKAXDFkXDJcMFwx5EFcMFwwzIFDXDBOQoFcME9CgoeOglwxXDGPgoKH5EFcMFwyzFwxRFwyQFwyXDBcMORBgFwxJlwwgFwwXDE3XDBcMFwwXDRcNkNhaXJvXDRcMTJQYW5nb0xheW91dFw0XDEyQXJkb3VyTW9ubyBcNFw1bWF0aFw0XDVjZWlsXDNmZmZmZmbmP1w0XDNweFw0XDlzZXRfdGV4dFw0XDTimalcNFwxNWdldF9waXhlbF9zaXplXDRcMTZzZXRfc291cmNlX3JnYmFcNFw3QVJET1VSXDRcN0x1YUFQSVw0XDE0Y29sb3JfdG9fcmdiYVw0XDhtb3ZlX3RvXDNcMFwwXDBcMFwwXDDgP1w0XDIyc2hvd19pbl9jYWlyb19jb250ZXh0XDFcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDAiIHNjcmlwdHNbMl1bImYiXSA9ICJcMjdMdWFTXDBcMjWTXDEzXApcMjZcClw0XDhcNFw4XDh4VlwwXDBcMFwwXDBcMFwwXDBcMFwwXDAod0BcMVwwXDE2XDBcMFwwZlwwXDBcMFwwXDBcMlwzXDBcMFwwLFwwXDBcMCZcMFwwXDEmXDCAXDBcMFwwXDBcMFwxXDBcMFwwXDBcMFwxXDBcMFwwXDBcMTZcMFwwXDBmXDBcMFwwXDBcMCbuXDBcMFwwXDZcMEBcMFwxMkBAXDAkgFwwXDFGgEBcMEzAwFwwZIBcMFwxhlwwQVwwh0BBXDGHgEFcMaSAgFwwxsBBXDDHXDDCXDHHQMJcMVwxgVwyXDBAXDGAXDDkgIBcMVw0XDFcMFwwS1wxXDBcMIaBQFwwjMFCXDOkgVwwXDHGgUBcMMxcMcNcM+SBXDBcMVwxQlwzXDBBQlwzXDCHgkNcMIzCQ1w1pIJcMFwxjFwyRFw1pFwyXDFcMVwzMIBcOICMQ8RcNqSDXDBcMcyDRFw35INcMFwx4kNcMFwwXDMwQFw2gMzDxFw25INcMFwxzFwzxVw35INcMFwxXDEyRMVcNiSEXDBcMVwxMlw0RVw4JIRcMFwxTVw0hFw3IICBXDdcMzBcMFwwgIBcMYBcNyBAhFwzXDMwXDBcMIDAXDGAXDiGhEVcMIfERVw5wFw0gFwyXDBcNVwwXDekRIBcMYxcNEZcN6SEXDBcMYxERlw5pIRcMFwxXDEzglw0XDRcMzCAXDCAzIPGXDbkg1wwXDFcMFwxgFw3qUJcMFwwKoP2XDEyN5xcMoBcMlwzMUBDXDVcMzBAXDOAhsJGXDCHXDJHXDXBQlw3XDBcMYNcN1wwRsNGXDBHw8dcNkdcM8hcNobDRlwwh0NIXDeHg0hcN6SCgFwyjMJIXDWkQlwwXDEmXDCAXDBcIkFcMFwwXDMwQFwzgIbCRlwwh1wyR1w1wUJcN1wwXDFcM1w5XDBGw0ZcMEfDx1w2R1wzyFw2hsNGXDCHQ0hcN4eDSFw3pIKAXDKMwkhcNaRCXDBcMSZcMIBcMIxCSVwyXDZcM0FcMFw3g0lcNkBcM1wwXDMkXDNcMFwxpEJcMFwwjMJJXDJcNlwzQVwwXDdcM0pcNk6DgVwzJFwzXDBcMaRCXDBcMIbCRlwwh0JKXDXBglwKXDBcM1wzgFwwpIKAXDHsXDJcMFwwXDjAgpXGXDJLXDBcMFwzgFwy5FwyXDFcMVwzMMBcMjaAXDEyxMRcNySEXDBcMUxES1wxzMREXDLkXDRcMFwxZIRcMFwwjITLXDFcMTJcNcZcNySFXDBcMUFFXDNcMIbFS1wwpESAXDKMXDRMXDWkhFwwXDGiRFwwXDBcMzBAXDIzgIxcNMZcN6SEXDBcMYxERlw5pIRcMFwxTYKEXDSMxEtcNVwxOFw1glw0QUVcMTJcMKREXDBcMoyEzFwxpIRcMFwxjMRMXDmkhFwwXDGMXDRNXDlcMUVcM1wwpISAXDGiXDRcMFwwXDMwwFwxN4DMRE1cOeSEXDBcMSDAhIZcMzDAXDE2gMyETVwyQUVcM1ww5ISAXDHMxM1cOeSEXDBcMVwxMlw1zlw5gUVcMTRcMCSFgFwxTFw1RFw5ZFw1XDFcMVwzMIBcMTKARlw2QVwwR1w2ylwxMoZGQlwwh4ZOXDEzh8ZOXDEzx1w2T1wxMlwwXDeAXDCkXDaAXDFkhlwwXDCGXDZBXDCHXDZKXDEzxkZCXDDHhs5cMTPHxs5cMTNcN0dPXDEyQFw3gFww5Fw2gFwxpIZcMFwwx4ZPXDEyzFw2zVwxM0FHXDNcMOSGgFwxXDEyR0tcMY1HXDZcOMFHXDNcMCSHXDBcMkxHS1wxzUdcNlw4zYeGXDE1XDFIXDNcMGSHXDBcMobHT1wwwVw3XDE2XDBcMFw4XDBcMTRAXDiAXDE0jUjQXDEzpEeAXDKOR1w0XDE0zlw3h1wxNFw2yEFcMFw3XDhCXDE2XDeIUFwxNkFIXDE2XDCAXDhcMFwxNcBcOIBcMTVcMTNJ0FwxM0HJXDE2XDAkiFwwXDNMXDhRXArAXDhcMFwxNmRIgFwxaUVcMFww6oXyXDEyN0xF0Vw5xoVAXDBcMFw2XDBcCmRFXDBcMsyE0Vwx5ERcMFwx6YJcMFwwakPkXDEyN8zCUVw15EJcMFwxJlwwgFwwSFwwXDBcMFw0XDdFZGl0b3JcNFwxNGdldF9zZWxlY3Rpb25cNFw4U2Vzc2lvblw0XDIwbm9taW5hbF9zYW1wbGVfcmF0ZVw0XDlUZW1wb3JhbFw0XDlUZW1wb01hcFw0XDVyZWFkXDRcN0FSRE9VUlw0XDdMdWFBUElcNFw1VmFtcFw0JmxpYmFyZG91cnZhbXBwbHVnaW5zOnFtLXRyYW5zY3JpcHRpb25cNFwxOWN1cnJlbnRfZW5kX3NhbXBsZVw0XDIxY3VycmVudF9zdGFydF9zYW1wbGVcMTlcMFwwXDBcMFwwXDBcMFwwXDRcOHJlZ2lvbnNcNFwxMXJlZ2lvbmxpc3RcNFw1aXRlclw0XDE1dG9fYXVkaW9yZWdpb25cNFw2aXNuaWxcNFw5cG9zaXRpb25cNFw4c2FtcGxlc1w0XDdsZW5ndGhcNFw2dGFibGVcNFw3aW5zZXJ0XDRcMTJ0b19yZWFkYWJsZVw0XDE2cmVhZGFibGVfbGVuZ3RoXDRcMTR0b19taWRpcmVnaW9uXDRcCkx1YURpYWxvZ1w0XDhNZXNzYWdlXDRcMjVQb2x5cGhvbmljIEF1ZGlvIHRvIE1JRElcMjBiTm8gc291cmNlIGF1ZGlvIHJlZ2lvbihzKSBzZWxlY3RlZC5cCkF0IGxlYXN0IG9uZSBhdWRpby1yZWdpb24gdG8gYmUgYW5hbHl6ZWQgbmVlZCB0byBiZSBzZWxlY3RlZC5cNFwxMk1lc3NhZ2VUeXBlXDRcNkVycm9yXDRcMTFCdXR0b25UeXBlXDRcNkNsb3NlXDRcNHJ1blwyMIZObyB0YXJnZXQgTUlESSByZWdpb24gc2VsZWN0ZWQuXApBIE1JREkgcmVnaW9uLCBpZGVhbGx5IGVtcHR5LCBhbmQgZXh0ZW5kaW5nIGJleW9uZCB0aGUgc2VsZWN0ZWQgYXVkaW8tcmVnaW9uKHMpIG5lZWRzIHRvIGJlIHNlbGVjdGVkLlw0XDIxc2V0X2luaXRpYWxfcG9zaXRpb25cNFwKdGltZXBvc190XDRcMTFzZXRfbGVuZ3RoXDRcCnRpbWVjbnRfdFw0XDE1UHJvZ3Jlc3NXaW5kb3dcNFwxNEF1ZGlvIHRvIE1JRElcNFw5cHJvZ3Jlc3NcNFw2cGFpcnNcNFwxMnF1YXJ0ZXJzX2F0XDRcOGFuYWx5emVcNFw5cHJvZ3Jlc3NcNFw5Y2FuY2VsZWRcNFwxNkdlbmVyYXRpbmcgTUlESVw0XDdwbHVnaW5cNFwyMWdldFJlbWFpbmluZ0ZlYXR1cmVzXDRcM2F0XDRcNXNpemVcNFwxMm1pZGlfc291cmNlXDRcNm1vZGVsXDRcMjJuZXdfbm90ZV9kaWZmX2NvbW1hbmRcNFwxMUF1ZGlvMk1pZGlcNFw5UmVhbFRpbWVcNFwxNXJlYWxUaW1lMkZyYW1lXDRcCnRpbWVzdGFtcFw0XDlkdXJhdGlvblw0XDd2YWx1ZXNcNFw2cHJpbnRcNFwyTlwxOVwxXDBcMFwwXDBcMFwwXDBcNFwxMm5ld19ub3RlcHRyXDE5XDEyN1wwXDBcMFwwXDBcMFwwXDRcNGFkZFw0XDE0YXBwbHlfY29tbWFuZFw0XDZyZXNldFw0XDVkb25lXDFcMFwwXDBcMFwwXDFcMFwwXDBcMDtcMFwwXDA9XDBcMFwwXDJcMFw2XApcMFwwXDCFXDBcMFwwjFwwQFwxXDVcMYBcMFwxM0FcMFwyRVwxXDBcMVwxOEFcMVwyQUFcMFwwpVwwXDBcMqZcMFwwXDAmXDCAXDBcMlwwXDBcMFw0XDlwcm9ncmVzc1w0XApBbmFseXppbmdcM1wwXDBcMFwxXApcMVw5XDFcOFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwIiBzY3JpcHRzWzJdWyJhIl0gPSB7fSBzY3JpcHRzWzJdWyJhIl1bIngtc2NyaXB0LW9yaWdpbiJdID0gIi91c3Ivc2hhcmUvYXJkb3VyNy9zY3JpcHRzL3ZhbXBfYXVkaW9fdG9fbWlkaS5sdWEiICAgIHNjcmlwdHNbM10gPSB7fSBzY3JpcHRzWzNdWyJzIl0gPSAiYXJkb3VyIHtcClw5W1widHlwZVwiXSA9IFwiRWRpdG9yQWN0aW9uXCIsXApcOW5hbWUgPSBcIk11c2VzY29yZSAtIE9wZW4gTWlkaSByZWdpb24gaW4gbXVzaWNhbCBub3RhdGlvbiBmb3JtYXRcIixcClw5YXV0aG9yICAgICAgPSBcIkp1c3RpbiBFaHJsaWNobWFuXCIsXApkZXNjcmlwdGlvbiA9IFtbXApUYWtlcyBhIHNlbGVjdGVkIE1JREkgcmVnaW9uLCBjb252ZXJ0cyBpdCB0byBhIFBERiB1c2luZyBtdXNlc2NvcmUgdGhlbiBvcGVucyB1cCB0aGUgUERGIGluIEZpcmVmb3hcCl1dXAp9XApcCmZ1bmN0aW9uIGZhY3RvcnkgKCkgcmV0dXJuIGZ1bmN0aW9uIChzaWduYWwsIC4uLilcClwKbG9jYWwgbWQgPSBMdWFEaWFsb2cuTWVzc2FnZSAoXCJPcGVuIE11c2ljYWwgU2NvcmVcIiwgXCJJZiBGaXJlZm94IHNob3dzIGEgYmxhbmsgcGFnZSwgeW91IG1heSBoYXZlIHRvIHdhaXQgYSBtaW51dGUgb3IgdHdvIGZvciBBcmRvdXIgdG8gd3JpdGUgdGhlIGZpbGUgdG8gZGlza1wiLCBMdWFEaWFsb2cuTWVzc2FnZVR5cGUuSW5mbywgTHVhRGlhbG9nLkJ1dHRvblR5cGUuQ2xvc2UpXApcOXByaW50IChtZDpydW4oKSlcClwKXDltZCA9IG5pbFwKXDljb2xsZWN0Z2FyYmFnZSAoKVwKXApcOWxvY2FsIG1kID0gTHVhRGlhbG9nLk1lc3NhZ2UgKFwiT3BlbiBNdXNpY2FsIFNjb3JlXCIsIFwiVG8gY29udGludWUgdXNpbmcgQXJkb3VyIHlvdSB3aWxsIG5lZWQgdG8gY2xvc2UgdGhlIEZpcmVmb3ggd2luZG93IG9yIHRoZSB0YWIgdGhlIHNjb3JlIGlzIG9wZW4gaW5cIiwgTHVhRGlhbG9nLk1lc3NhZ2VUeXBlLkluZm8sIEx1YURpYWxvZy5CdXR0b25UeXBlLkNsb3NlKVwKXDlwcmludCAobWQ6cnVuKCkpXApcClw5bWQgPSBuaWxcClw5Y29sbGVjdGdhcmJhZ2UgKClcClwKXApcCmxvY2FsIHNlbCA9IEVkaXRvcjpnZXRfc2VsZWN0aW9uKClcCmxvY2FsIGNvdW50ID0gMFwKbG9jYWwgbWlkaV9yZWdpb25cClwKZm9yIHIgaW4gc2VsLnJlZ2lvbnM6cmVnaW9ubGlzdCgpOml0ZXIoKSBkb1wKICAgIGNvdW50ID0gY291bnQgKyAxXAogICAgaWYgcjp0b19taWRpcmVnaW9uKCk6aXNuaWwoKSB0aGVuXAogICAgICAgbG9jYWwgbWQgPSBMdWFEaWFsb2cuTWVzc2FnZSAoXCJPcGVuIGluIE11c2VzY29yZVwiLCBcIlRoZSBzZWxlY3RlZCByZWdpb24gaXMgbm90IGEgbWlkaVwiLCBMdWFEaWFsb2cuTWVzc2FnZVR5cGUuSW5mbywgTHVhRGlhbG9nLkJ1dHRvblR5cGUuQ2xvc2UpXApcOXByaW50IChtZDpydW4oKSlcCiAgICAgICAgIG1kID0gbmlsXApcOWNvbGxlY3RnYXJiYWdlICgpXAogICAgICAgIHJldHVyblwKICAgIGVsc2VcCiAgICAgICAgbWlkaV9yZWdpb24gPSByXAogICAgZW5kXAplbmRcClwKaWYgY291bnQgfj0gMSB0aGVuXAogICAgICAgbG9jYWwgbWQgPSBMdWFEaWFsb2cuTWVzc2FnZSAoXCJPcGVuIGluIE11c2VzY29yZVwiLCBcIlBsZWFzZSBzZWxlY3QgZXhhY3RseSAxIG1pZGkgcmVnaW9uXCIsIEx1YURpYWxvZy5NZXNzYWdlVHlwZS5JbmZvLCBMdWFEaWFsb2cuQnV0dG9uVHlwZS5DbG9zZSlcClw5cHJpbnQgKG1kOnJ1bigpKVwKICAgICAgICAgbWQgPSBuaWxcClw5Y29sbGVjdGdhcmJhZ2UgKClcCiAgICByZXR1cm5cCmVuZFwKXApsb2NhbCBybiA9IG1pZGlfcmVnaW9uOm5hbWUoKVwKbG9jYWwgc291cmNlID0gbWlkaV9yZWdpb246c291cmNlKDApOnRvX2ZpbGVzb3VyY2UoKTpwYXRoKClcCnByaW50KHNvdXJjZSlcCmxvY2FsIGZpbGVwYXRoID0gc291cmNlXApcClwKbG9jYWwgcXVvdGVkZmlsZXBhdGggPSAnXCInIC4uIGZpbGVwYXRoIC4uICdcIidcClwKbG9jYWwgY29tbWFuZCA9IFwibXNjb3JlIC1vIC90bXAvb3V0cHV0LnBkZiAgXCIgLi5xdW90ZWRmaWxlcGF0aFwKXApvcy5leGVjdXRlKGNvbW1hbmQpXApcCm9zLmV4ZWN1dGUoXCJmaXJlZm94IGZpbGU6Ly8vdG1wL291dHB1dC5wZGZcIilcClwKXApcClwKXAplbmQgZW5kXApcClwKXApcClwKXAoiICBzY3JpcHRzWzNdWyJuIl0gPSAiTXVzZXNjb3JlIC0gT3BlbiBNaWRpIHJlZ2lvbiBpbiBtdXNpY2FsIG5vdGF0aW9uIGZvcm1hdCIgIHNjcmlwdHNbM11bImMiXSA9IHRydWUgc2NyaXB0c1szXVsiZiJdID0gIlwyN0x1YVNcMFwyNZNcMTNcClwyNlwKXDRcOFw0XDhcOHhWXDBcMFwwXDBcMFwwXDBcMFwwXDBcMCh3QFwxXDBcClwwXDBcMEVcMFwwXDBcMFwwXDJcM1wwXDBcMCxcMFwwXDAmXDBcMFwxJlwwgFwwXDBcMFwwXDBcMVwwXDBcMFwwXDBcMVwwXDBcMFwwXApcMFwwXDBFXDBcMFwwXDFcMVwxNVwxMjdcMFwwXDBGXDBAXDBHQMBcMIGAXDBcMMHAXDBcMFw2XDFAXDBcN1wxQVwyXDdBQVwyRlwxQFwwR4HBXDJHwcFcMmSAgFwyhlwwQlwwzEDCXDDkXDBcMFwxpEBcMFwwRFwwXDBcMIaAQlwwpECAXDCGXDBAXDCHQEBcMcGAXDBcMFwxwVwyXDBGXDFAXDBHXDHBXDJHQcFcMoZcMUBcMIeBQVwzh8FBXDOkgIBcMsZcMEJcMFwxMkFCXDEkXDFcMFwx5EBcMFwwhFwwXDBcMMaAQlww5ECAXDDGXDBDXDDMQMNcMeSAXDBcMVwxgVwzXDBEXDFcMFwwh8HDXDGMXDFEXDOkgVwwXDGMQURcM6RcMVwxXDFcMzDAXDaAXDEzgURcMozCxFw0pIJcMFwxjFwyRVw1pIJcMFwxolwyXDBcMFwzMMBcNICGXDJAXDCHQkBcNcFCXDVcMFwxg1w1XDBGXDNAXDBHXDPBXDZHQ8FcNoZcM0BcMIeDQVw3h8NBXDekgoBcMsZcMkJcMFwxMkNCXDUkXDNcMFwx5EJcMFwwhFwyXDBcMMaCQlww5EKAXDAmXDCAXDBcMzBcMFwwgEBcMYBcNKlBXDBcMCpC+FwxMjdfgERcMlwzMIBcNICGXDFAXDCHQUBcM8FBXDVcMFwxwlw1XDBGXDJAXDBHXDLBXDRHQsFcNIZcMkBcMIeCQVw1h8JBXDWkgYBcMsZcMUJcMFwxMkJCXDMkXDJcMFwx5EFcMFwwhFwxXDBcMMaBQlww5EGAXDAmXDCAXDCMXDHGXDKkgVwwXDHMQcZcMkGCXDNcMOSBgFwxzIHGXDPkgVwwXDHMwcZcM+SBXDBcMVw2XDJCXDBAXDKAXDMkQlwwXDFcMFwygFwzQVwyXDdcMIBcMlwwXDTBXDJcN1wwXcKCXDSBQlw3XDDAXDKAXDSdwlwyXDXGgkdcMMfCx1w1XDBcM1wwXDXkQlwwXDHGgkdcMMfCx1w1XDFcM1w4XDDkQlwwXDEmXDCAXDAhXDBcMFwwXDRcCkx1YURpYWxvZ1w0XDhNZXNzYWdlXDRcMTlPcGVuIE11c2ljYWwgU2NvcmVcMjBpSWYgRmlyZWZveCBzaG93cyBhIGJsYW5rIHBhZ2UsIHlvdSBtYXkgaGF2ZSB0byB3YWl0IGEgbWludXRlIG9yIHR3byBmb3IgQXJkb3VyIHRvIHdyaXRlIHRoZSBmaWxlIHRvIGRpc2tcNFwxMk1lc3NhZ2VUeXBlXDRcNUluZm9cNFwxMUJ1dHRvblR5cGVcNFw2Q2xvc2VcNFw2cHJpbnRcNFw0cnVuXDRcMTVjb2xsZWN0Z2FyYmFnZVwyMGNUbyBjb250aW51ZSB1c2luZyBBcmRvdXIgeW91IHdpbGwgbmVlZCB0byBjbG9zZSB0aGUgRmlyZWZveCB3aW5kb3cgb3IgdGhlIHRhYiB0aGUgc2NvcmUgaXMgb3BlbiBpblw0XDdFZGl0b3JcNFwxNGdldF9zZWxlY3Rpb25cMTlcMFwwXDBcMFwwXDBcMFwwXDRcOHJlZ2lvbnNcNFwxMXJlZ2lvbmxpc3RcNFw1aXRlclwxOVwxXDBcMFwwXDBcMFwwXDBcNFwxNHRvX21pZGlyZWdpb25cNFw2aXNuaWxcNFwxOE9wZW4gaW4gTXVzZXNjb3JlXDRcIlRoZSBzZWxlY3RlZCByZWdpb24gaXMgbm90IGEgbWlkaVw0JFBsZWFzZSBzZWxlY3QgZXhhY3RseSAxIG1pZGkgcmVnaW9uXDRcNW5hbWVcNFw3c291cmNlXDRcMTR0b19maWxlc291cmNlXDRcNXBhdGhcNFwyXCJcNFwyOG1zY29yZSAtbyAvdG1wL291dHB1dC5wZGYgIFw0XDNvc1w0XDhleGVjdXRlXDRcMzFmaXJlZm94IGZpbGU6Ly8vdG1wL291dHB1dC5wZGZcMVwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMCIgc2NyaXB0c1szXVsiYSJdID0ge30gc2NyaXB0c1szXVsiYSJdWyJ4LXNjcmlwdC1vcmlnaW4iXSA9ICIvaG9tZS9qbWFuLy5jb25maWcvYXJkb3VyNy9zY3JpcHRzL21zY29yZWV4Lmx1YSIgICAgc2NyaXB0c1s0XSA9IHt9IHNjcmlwdHNbNF1bInMiXSA9ICJhcmRvdXIge1wKXDlbXCJ0eXBlXCJdID0gXCJFZGl0b3JBY3Rpb25cIixcClw5bmFtZSA9IFwiVGVtcG8gLSBFc3RpbWF0ZSBUZW1wb1wiLFwKXDlhdXRob3IgICAgICA9IFwiSnVzdGluIEVocmxpY2htYW5cIixcCmRlc2NyaXB0aW9uID0gW1tcCkVzdGltYXRlIHRoZSB0ZW1wbyBvZiBhIHNlbGVjdGVkIGF1ZGlvIHJlZ2lvbiBhbmQgc2V0IHRlbXBvIG1hcmtlcnNcCl1dXAp9XApcCmZ1bmN0aW9uIGZhY3RvcnkgKCkgcmV0dXJuIGZ1bmN0aW9uIChzaWduYWwsIC4uLilcClwKXApcClwKbG9jYWwgc2VsID0gRWRpdG9yOmdldF9zZWxlY3Rpb24oKVwKbG9jYWwgY291bnQgPSAwXApsb2NhbCBtaWRpX3JlZ2lvblwKXApmb3IgciBpbiBzZWwucmVnaW9uczpyZWdpb25saXN0KCk6aXRlcigpIGRvXAogICAgY291bnQgPSBjb3VudCArIDFcCiAgICBpZiByOnRvX2F1ZGlvcmVnaW9uKCk6aXNuaWwoKSB0aGVuXAogICAgICAgbG9jYWwgbWQgPSBMdWFEaWFsb2cuTWVzc2FnZSAoXCJFc3RpbWF0ZSBUZW1wb1wiLCBcIlRoZSBzZWxlY3RlZCByZWdpb24gaXMgbm90IGFuIGF1ZGlvIHJlZ2lvblwiLCBMdWFEaWFsb2cuTWVzc2FnZVR5cGUuSW5mbywgTHVhRGlhbG9nLkJ1dHRvblR5cGUuQ2xvc2UpXApcOXByaW50IChtZDpydW4oKSlcCiAgICAgICAgIG1kID0gbmlsXApcOWNvbGxlY3RnYXJiYWdlICgpXAogICAgICAgIHJldHVyblwKICAgIGVsc2VcCiAgICAgICAgYXVkaW9fcmVnaW9uID0gclwKICAgIGVuZFwKZW5kXApcCmlmIGNvdW50IH49IDEgdGhlblwKICAgICAgIGxvY2FsIG1kID0gTHVhRGlhbG9nLk1lc3NhZ2UgKFwiRXNpdG1hdGUgVGVtcG9cIiwgXCJQbGVhc2Ugc2VsZWN0IGV4YWN0bHkgMSBhdWRpbyByZWdpb25cIiwgTHVhRGlhbG9nLk1lc3NhZ2VUeXBlLkluZm8sIEx1YURpYWxvZy5CdXR0b25UeXBlLkNsb3NlKVwKXDlwcmludCAobWQ6cnVuKCkpXAogICAgICAgICBtZCA9IG5pbFwKXDljb2xsZWN0Z2FyYmFnZSAoKVwKICAgIHJldHVyblwKZW5kXApcCmxvY2FsIHJuID0gYXVkaW9fcmVnaW9uOm5hbWUoKVwKbG9jYWwgc291cmNlID0gYXVkaW9fcmVnaW9uOnNvdXJjZSgwKTp0b19maWxlc291cmNlKCk6cGF0aCgpXApwcmludChzb3VyY2UpXApsb2NhbCBmaWxlcGF0aCA9IHNvdXJjZVwKXApcCmxvY2FsIHF1b3RlZGZpbGVwYXRoID0gJ1wiJyAuLiBmaWxlcGF0aCAuLiAnXCInXApcCmxvY2FsIGNvbW1hbmQgPSBcInNveCAgXCIgLi5xdW90ZWRmaWxlcGF0aC4uIFwiIC10IHJhdyAtciA0ODAwMCAgLWUgZmxvYXQgLWMgMSAtIHwgYnBtXCJcClwKXApvcy5leGVjdXRlKGNvbW1hbmQpXApcCmxvY2FsIGhhbmRsZSA9IGlvLnBvcGVuKGNvbW1hbmQpXApsb2NhbCByZXN1bHQgPSBoYW5kbGU6cmVhZChcIiphXCIpXApoYW5kbGU6Y2xvc2UoKVwKXApsb2NhbCBtZCA9IEx1YURpYWxvZy5NZXNzYWdlKFwiRXN0aW1hdGUgVGVtcG9cIiwgcmVzdWx0LCBMdWFEaWFsb2cuTWVzc2FnZVR5cGUuSW5mbywgTHVhRGlhbG9nLkJ1dHRvblR5cGUuQ2xvc2UpXApwcmludChtZDpydW4oKSlcCm1kID0gbmlsXApjb2xsZWN0Z2FyYmFnZSgpXApcCi0tIHRvIGRvLCBhZGQgdGVtcG8gbWFya2VycyBhbmQgcHJvbXB0IHdoZXRoZXIgb3Igbm90IHlvdSB3YW50IHRvIHRlbXBvIG1hcmtlcnNcClwKXApcClwKZW5kIGVuZFwKXApcClwKXApcClwKXApcClwKXApcClwKXApcClwKXApcCiIgIHNjcmlwdHNbNF1bIm4iXSA9ICJUZW1wbyAtIEVzdGltYXRlIFRlbXBvIiAgc2NyaXB0c1s0XVsiYyJdID0gdHJ1ZSBzY3JpcHRzWzRdWyJmIl0gPSAiXDI3THVhU1wwXDI1k1wxM1wKXDI2XApcNFw4XDRcOFw4eFZcMFwwXDBcMFwwXDBcMFwwXDBcMFwwKHdAXDFcMFwKXDBcMFwwQ1wwXDBcMFwwXDBcMlwzXDBcMFwwLFwwXDBcMCZcMFwwXDEmXDCAXDBcMFwwXDBcMFwxXDBcMFwwXDBcMFwxXDBcMFwwXDBcClwwXDBcMENcMFwwXDBcMVwxXDE2dVwwXDBcMEZcMEBcMExAwFwwZIBcMFwxgYBcMFwwxFwwXDBcMFw3wcBcMFwxMlwxQVwyJIFcMFwxXDEyQUFcMiRcMVwxXDFcMzDAXDaAjYBBXDFcMTLCwVwzJIJcMFwxXDEyXDJCXDQkglwwXDFcIlwyXDBcMFwzMMBcNIBcNkJCXDBcN4JCXDRBwlwyXDCBXDJcM1wwxkJCXDDHQsNcNceCw1w1XDZDQlwwXDfDQ1w2XDdcM0RcNiSCgFwyRkJEXDCMgkRcNKRcMlwwXDFkQlwwXDBcNFwyXDBcMEbCRFwwZEKAXDAmXDCAXDBcMzBcMFwwgFw4wFwxiilBXDBcMKpB+FwxMjdfgEFcMVwzMIBcNIBcNkFCXDBcN4FCXDJBQVw1XDCBgVw1XDDGQUJcMMdBw1wzx4HDXDNcNkJCXDBcN8JDXDRcN1wyRFw0JIGAXDJGQURcMIyBRFwypFwxXDBcMWRBXDBcMFw0XDFcMFwwRsFEXDBkQYBcMCZcMIBcMFw2XDFFXDBcMTLBRVwyJIFcMFwxRlwxRVwwTFwxxlwywYFcMFwwZIGAXDFMQcZcMmSBXDBcMUyBxlwyZIFcMFwxhkFEXDDAXDGAXDKkQVwwXDGAXDGAXDLBwVw2XDBcMFwyXDBcM0HCXDZcMN1BglwzXDFcMlw3XDBAXDKAXDOBQlw3XDBcMjmCXDJcNEaCR1wwR8LHXDSAXDJcMFw0ZEJcMFwxRlwySFwwR0LIXDSAXDJcMFw0ZIJcMFwxjILIXDRcMcNcOFwwpIKAXDHMXDLJXDTkQlwwXDHGQkJcMMeCwlw1XDHDXDJcMEBcM1wwXDWGQ0JcMIdDQ1w3h4NDXDfGQ0JcMMfDw1w3x1wzxFw35IKAXDJcNkNEXDBMg8RcNWRcM1wwXDEkQ1wwXDDEXDJcMFwwXDbDRFwwJEOAXDAmXDCAXDAlXDBcMFwwXDRcN0VkaXRvclw0XDE0Z2V0X3NlbGVjdGlvblwxOVwwXDBcMFwwXDBcMFwwXDBcNFw4cmVnaW9uc1w0XDExcmVnaW9ubGlzdFw0XDVpdGVyXDE5XDFcMFwwXDBcMFwwXDBcMFw0XDE1dG9fYXVkaW9yZWdpb25cNFw2aXNuaWxcNFwKTHVhRGlhbG9nXDRcOE1lc3NhZ2VcNFwxNUVzdGltYXRlIFRlbXBvXDIwK1RoZSBzZWxlY3RlZCByZWdpb24gaXMgbm90IGFuIGF1ZGlvIHJlZ2lvblw0XDEyTWVzc2FnZVR5cGVcNFw1SW5mb1w0XDExQnV0dG9uVHlwZVw0XDZDbG9zZVw0XDZwcmludFw0XDRydW5cNFwxNWNvbGxlY3RnYXJiYWdlXDRcMTNhdWRpb19yZWdpb25cNFwxNUVzaXRtYXRlIFRlbXBvXDQlUGxlYXNlIHNlbGVjdCBleGFjdGx5IDEgYXVkaW8gcmVnaW9uXDRcNW5hbWVcNFw3c291cmNlXDRcMTR0b19maWxlc291cmNlXDRcNXBhdGhcNFwyXCJcNFw2c294ICBcNCggLXQgcmF3IC1yIDQ4MDAwICAtZSBmbG9hdCAtYyAxIC0gfCBicG1cNFwzb3NcNFw4ZXhlY3V0ZVw0XDNpb1w0XDZwb3Blblw0XDVyZWFkXDRcMyphXDRcNmNsb3NlXDFcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDAiIHNjcmlwdHNbNF1bImEiXSA9IHt9IHNjcmlwdHNbNF1bImEiXVsieC1zY3JpcHQtb3JpZ2luIl0gPSAiL2hvbWUvam1hbi8uY29uZmlnL2FyZG91cjcvc2NyaXB0cy90ZW1wby5sdWEiICAgIHNjcmlwdHNbNV0gPSB7fSBzY3JpcHRzWzVdWyJzIl0gPSAiYXJkb3VyIHtcCiBbXCJ0eXBlXCJdID0gXCJFZGl0b3JBY3Rpb25cIixcCiBuYW1lID0gXCJEcnVtIC0gQ2hhbmdlIERydW0gUGx1Z2luXCIsXAogYXV0aG9yICAgICAgPSBcIkp1c3RpbiBFaHJsaWNobWFuXCIsXApkZXNjcmlwdGlvbiA9IFtbXApSZXBsYWNlIERydW0gUGx1Z2luIG9uIGN1cnJlbnRseSBzZWxlY3RlZCB0cmFja1wKXV1cCn1cClwKZnVuY3Rpb24gZmFjdG9yeSAoKSByZXR1cm4gZnVuY3Rpb24gKHNpZ25hbCwgLi4uKVwKXApcCmxvY2FsIGRpYWxvZ19vcHRpb25zID0ge1wKICB7XAogICB0eXBlID0gXCJkcm9wZG93blwiLCBrZXkgPSBcImRyb3Bkb3duXCIsIHRpdGxlID0gXCJDaG9vc2UgRHJ1bSBQbHVnaW5cIiwgdmFsdWVzID1cCiAgIHtcCiAgICBbXCJDaG9vc2UgRHJ1bSBQbHVnaW5cIl0gPSAxLCBbXCJNVFBvd2VyRHJ1bUtpdFwiXSA9IDIsXAogICAgW1wiUmVkIFplcHBlbGluXCJdID0gMyxcCiAgICBbXCJCbGFjayBQZWFybFwiXSA9IDQsXAogICAgICBbXCJCZWF0IERSTVJcIl0gPSA1LFwKICAgICAgICBbXCJCbG9uZGUgQm9wXCJdID0gNlwKICAgfSxcCiAgIGRlZmF1bHQgPSBcIkNob29zZSBEcnVtIFBsdWdpblwiXAogIH1cCiB9XApcCiBsb2NhbCBvZCA9IEx1YURpYWxvZy5EaWFsb2cgKFwiQ2hvb3NlIERydW0gUGx1Z2luXCIsIGRpYWxvZ19vcHRpb25zKVwKIGxvY2FsIHJ2ID0gb2Q6cnVuKClcClwKIGxvY2FsIHBsdWdpbl9uYW1lID0gbmlsXApcCmlmIHJ2IGFuZCBydltcImRyb3Bkb3duXCJdID09IDIgdGhlblwKXDlcOXByaW50KFwiWW91IENob3NlIE1ULVBvd2VyRHJ1bUtpdFwiKVwKXDlcOXBsdWdpbl9uYW1lID0gXCJNVC1Qb3dlckRydW1LaXRcIlwKXApcOSBuZXcgPSBBUkRPVVIuTHVhQVBJLm5ld19wbHVnaW4oU2Vzc2lvbiwgcGx1Z2luX25hbWUsIEFSRE9VUi5QbHVnaW5UeXBlLkxYVlNULCBcIlwiKVwKXDkgZW5kXApcClwKXApcClwKIFw5aWYgcnYgYW5kIHJ2W1wiZHJvcGRvd25cIl0gPT0gMyB0aGVuXApcOVw5cHJpbnQoXCJZb3UgQ2hvc2UgUmVkIFplcHBlbGluIERydW1raXRcIilcClw5XDlwbHVnaW5fbmFtZSA9IFwiUmVkIFplcHBlbGluIERydW1raXRcIlwKXApcOSBuZXcgPSBBUkRPVVIuTHVhQVBJLm5ld19wbHVnaW4oU2Vzc2lvbiwgcGx1Z2luX25hbWUsIEFSRE9VUi5QbHVnaW5UeXBlLkxWMiwgXCJcIilcClw5IGVuZFwKXApcCiBcOWlmIHJ2IGFuZCBydltcImRyb3Bkb3duXCJdID09IDQgdGhlblwKXDlcOXByaW50KFwiWW91IENob3NlIEJsYWNrIFBlYXJsIERydW1raXRcIilcClwKXDlcOXBsdWdpbl9uYW1lID0gXCJCbGFjayBQZWFybCBEcnVta2l0XCJcClwKXDkgbmV3ID0gQVJET1VSLkx1YUFQSS5uZXdfcGx1Z2luKFNlc3Npb24sIHBsdWdpbl9uYW1lLCBBUkRPVVIuUGx1Z2luVHlwZS5MVjIsIFwiXCIpXApcOSBlbmRcClwKXDkgIFw5aWYgcnYgYW5kIHJ2W1wiZHJvcGRvd25cIl0gPT0gNSB0aGVuXApcOVw5cHJpbnQoXCJZb3UgQ2hvc2UgQmVhdCBEUk1SXCIpXApcClw5XDlwbHVnaW5fbmFtZSA9IFwiQmVhdCBEUk1SXCJcClwKXDkgbmV3ID0gQVJET1VSLkx1YUFQSS5uZXdfcGx1Z2luKFNlc3Npb24sIHBsdWdpbl9uYW1lLCBBUkRPVVIuUGx1Z2luVHlwZS5MWFZTVCwgXCJcIilcClw5IGVuZFwKXApcOSAgXDlpZiBydiBhbmQgcnZbXCJkcm9wZG93blwiXSA9PSA2IHRoZW5cClw5XDlwcmludChcIllvdSBDaG9zZSBCbG9uZGUgQm9wIERydW1raXRcIilcClwKXDlcOXBsdWdpbl9uYW1lID0gXCJCbG9uZGUgQm9wIERydW1raXRcIlwKXApcOSBuZXcgPSBBUkRPVVIuTHVhQVBJLm5ld19wbHVnaW4oU2Vzc2lvbiwgcGx1Z2luX25hbWUsIEFSRE9VUi5QbHVnaW5UeXBlLkxWMiwgXCJcIilcClw5IGVuZFwKXApsb2NhbCBzZWwgPSBFZGl0b3I6Z2V0X3NlbGVjdGlvbiAoKVwKaWYgbm90IHNlbDplbXB0eSAoKSBhbmQgbm90IHNlbC50cmFja3M6cm91dGVsaXN0ICgpOmVtcHR5ICgpICB0aGVuXAogIC0tIGZvciBlYWNoIHNlbGVjdGVkIHRyYWNrXAogIGZvciByIGluIHNlbC50cmFja3M6cm91dGVsaXN0ICgpOml0ZXIgKCkgZG9cCiAgICBpZiBub3Qgcjp0b190cmFjayAoKTppc25pbCAoKSB0aGVuXAogICAgb2xkID0gcjpudGhfcGx1Z2luKDApXAogICAgLS0gIGFzc2VydCAobm90IG5ldzppc25pbCgpKVwKICAgICAgcjpyZXBsYWNlX3Byb2Nlc3NvciAob2xkLCBuZXcsIG5pbClcCiAgICAgICAgcjpzZXRfbmFtZShwbHVnaW5fbmFtZSwgbmlsKVwKXAogICAgICAgLS0gaWYgcGx1Z2luX25hbWUgPT0gXCJEYW5jZVwiIG9yIHBsdWdpbl9uYW1lID09IFwiODA4XCIgdGhlblwKICAgICAgLS0gbG9jYWwgcHJvYyA9IFNlc3Npb246cm91dGVfYnlfbmFtZShwbHVnaW5fbmFtZSk6dG9fdHJhY2soKTpudGhfcGx1Z2luKDApOnRvX2luc2VydCgpOnBsdWdpbigwKVwKICAgICAgLS0gR2V0IHRoZSBwcmVzZXRcCi0tbG9jYWwgcHJlc2V0ID0gcHJvYzpwcmVzZXRfYnlfbGFiZWwocGx1Z2luX25hbWUpXApcCi0tIExvYWQgdGhlIHByZXNldFwKLS1wcm9jOmxvYWRfcHJlc2V0KHByZXNldClcCiAgICAgICAtLWVuZFwKICAgIGVuZFwKICBlbmRcCmVuZFwKXAplbmQgZW5kXApcClwKZnVuY3Rpb24gaWNvbiAocGFyYW1zKSByZXR1cm4gZnVuY3Rpb24gKGN0eCwgd2lkdGgsIGhlaWdodClcClw5bG9jYWwgeCA9IHdpZHRoICogLjVcClw5bG9jYWwgeSA9IGhlaWdodCAqIC41XApcOWxvY2FsIHIgPSBtYXRoLm1pbiAoeCwgeSkgKiAuN1wKXDljdHg6c2F2ZSAoKVwKXDljdHg6dHJhbnNsYXRlICh4LCB5KVwKXDljdHg6c2NhbGUgKDEsIC41KVwKXDljdHg6dHJhbnNsYXRlICgteCwgLXkpXApcOWN0eDphcmMgKHgsIHksIHIsIDAsIDIgKiBtYXRoLnBpKVwKXDljdHg6c2V0X3NvdXJjZV9yZ2JhICguOSwgLjksIDEsIDEpXApcOWN0eDpmaWxsICgpXApcOWN0eDphcmMgKHgsIHksIHIsIDAsIG1hdGgucGkpXApcOWN0eDphcmNfbmVnYXRpdmUgKHgsIHkgKiAxLjYsIHIsIG1hdGgucGksIDApXApcOWN0eDpzZXRfc291cmNlX3JnYmEgKC43LCAuNywgLjcsIDEpXApcOWN0eDpmaWxsICgpXApcOWN0eDpyZXN0b3JlICgpXApcClw5Y3R4OnNldF9zb3VyY2VfcmdiYSAoLjYsIC40LCAuMiwgMSlcClw5Y3R4OnRyYW5zbGF0ZSAoeCwgeSlcClw5Y3R4OnNjYWxlICguNywgMSlcClw5Y3R4OnRyYW5zbGF0ZSAoLXgsIC15KVwKXDljdHg6c2V0X2xpbmVfY2FwIChDYWlyby5MaW5lQ2FwLlJvdW5kKVwKXApcOWZ1bmN0aW9uIGRydW1zdGljayAoeHAsIGxyKVwKXDlcOWN0eDpzZXRfbGluZV93aWR0aCAociAqIC4zKVwKXDlcOWN0eDptb3ZlX3RvICh4ICogeHAsIHkpXApcOVw5Y3R4OmNsb3NlX3BhdGggKClcClw5XDljdHg6c3Ryb2tlICgpXApcOVw5Y3R4OnNldF9saW5lX3dpZHRoIChyICogLjIpXApcOVw5Y3R4Om1vdmVfdG8gKHggKiB4cCwgeSlcClw5XDljdHg6cmVsX2xpbmVfdG8gKGxyICogeCwgeSlcClw5XDljdHg6c3Ryb2tlICgpXApcOWVuZFwKXDlkcnVtc3RpY2sgKDEuMiwgMS4yKVwKXDlkcnVtc3RpY2sgKDAuNywgLS41KVwKZW5kIGVuZFwKXApcClwKIiAgc2NyaXB0c1s1XVsibiJdID0gIkRydW0gLSBDaGFuZ2UgRHJ1bSBQbHVnaW4iICBzY3JpcHRzWzVdWyJjIl0gPSAiXDI3THVhU1wwXDI1k1wxM1wKXDI2XApcNFw4XDRcOFw4eFZcMFwwXDBcMFwwXDBcMFwwXDBcMFwwKHdAXDFcMGRcMFwwXDCHXDBcMFwwXDFcMFwyXDNcMFwwXDBsXDBcMFwwZlwwXDBcMSZcMIBcMFwwXDBcMFwwXDFcMFwwXDBcMFwwXDFcMFwwXDBcMGRcMFwwXDCHXDBcMFwwXDNcMFwxM2NcMFwwXDDPXDDAXDBcMTVcMUBcMUZBQFwwR4HAXDKAXDGAXDHAXDFcMFwyZIGAXDFPwcBcMoxcMUFcMKRBXDBcMYxBQVwwXDBcMoBcMUBcMlwwXDKkQVwwXDKMgUFcMFwxwlwxXDBBXDJcMFwwpEFcMFwyjEFBXDBcMjVcMoBcMVlcMlwwXDKkQVwwXDKMXDFCXDBcMFwygFwxQFwyXDBcMoBcMoBcMsFCXDJcMFw2Q0BcMFw3g0JcNlwxNVwzg4WkQYBcM4xcMUNcMFwxQlwzXDBBQlwzXDCBwlwxXDDBwlwxXDCkQVwwXDOMgUNcMKRBXDBcMYxcMUJcMFwwXDKAXDFAXDJcMFwygFwygFwywUJcMlwwXDZDQFwwXDeDQlw2pEGAXDOMwUNcMFwwXDKAXDFPXDJEXDKAXDKAXDLGQkBcMMeCwlw1XDFDXDJcMKRBgFwzjFwxQ1wwXDHCXDBcMEHCXDBcMIHCXDBcMMHCXDFcMKRBXDBcM4yBQ1wwpEFcMFwxjEFEXDCkQVwwXDGMXDFDXDBcMYJcNFwwQcJcNFwwgVwyXDVcMMHCXDFcMKRBXDBcM4xBQVwwXDBcMoBcMUBcMlwwXDKkQVwwXDKMgUFcMFwxwlwwXDBBwlwxXDCkQVwwXDKMQUFcMFwyNVwygFwxWVwyXDBcMqRBXDBcMoxBRVwwXDaCRVwwXDfCRVw0XDdcMkZcNKRBgFwxrFwxXDBcMFw4gIGMhkFGXDDBgVw2XDBcMYJcNlwwpEGAXDGGQUZcMMHBXDBcMFwxwlw2XDCkQYBcMSZcMIBcMFwyOFwwXDBcMFwzXDBcMFwwXDBcMFww4D9cNFw1bWF0aFw0XDRtaW5cM2ZmZmZmZuY/XDRcNXNhdmVcNFwKdHJhbnNsYXRlXDRcNnNjYWxlXDE5XDFcMFwwXDBcMFwwXDBcMFw0XDRhcmNcMTlcMFwwXDBcMFwwXDBcMFwwXDRcM3BpXDE5XDJcMFwwXDBcMFwwXDBcMFw0XDE2c2V0X3NvdXJjZV9yZ2JhXDPNzMzMzMzsP1w0XDVmaWxsXDRcMTNhcmNfbmVnYXRpdmVcM5qZmZmZmfk/XDRcOHJlc3RvcmVcMDAzMzMzMzMz4z9cM5qZmZmZmdk/XDOamZmZmZnJP1w0XDEzc2V0X2xpbmVfY2FwXDRcNkNhaXJvXDRcOExpbmVDYXBcNFw2Um91bmRcNFwKZHJ1bXN0aWNrXDAwMzMzMzMzM/M/XDNcMFwwXDBcMFwwXDDgv1wxXDBcMFwwXDBcMFwxXDBcMFwwXDB7XDBcMFwwhFwwXDBcMFwyXDBcNiZcMFwwXDCFXDBcMFwwjFwwQFwxXDVcMYBcMFwxNUFAXDKkQIBcMYVcMFwwXDCMgEBcMVw1XDFcMFwxXDE1XDFcMFwyRVwxgFwxpEBcMFwyhVwwXDBcMIzAQFwxpEBcMFwxhVwwXDBcMIxcMEFcMaRAXDBcMYVcMFwwXDCMXDBAXDFcNVwxgFwwXDE1QUFcMqRAgFwxhVwwXDBcMIyAQFwxXDVcMVwwXDFcMTVcMVwwXDJFXDGAXDGkQFwwXDKFXDBcMFwwjIBBXDFcNVwxXDBcMVwxNVwxgVwwRVwxgFwxpEBcMFwyhVwwXDBcMIxcMEFcMaRAXDBcMSZcMIBcMFw3XDBcMFwwXDRcMTVzZXRfbGluZV93aWR0aFwwMDMzMzMzMzPTP1w0XDhtb3ZlX3RvXDRcMTFjbG9zZV9wYXRoXDRcN3N0cm9rZVwzmpmZmZmZyT9cNFwxMnJlbF9saW5lX3RvXDRcMFwwXDBcMVwwXDFcNVwxXDNcMVw0XDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDAiIHNjcmlwdHNbNV1bImYiXSA9ICJcMjdMdWFTXDBcMjWTXDEzXApcMjZcClw0XDhcNFw4XDh4VlwwXDBcMFwwXDBcMFwwXDBcMFwwXDAod0BcMVwwXApcMFwwXDBhXDBcMFwwXDBcMFwyXDNcMFwwXDAsXDBcMFwwJlwwXDBcMSZcMIBcMFwwXDBcMFwwXDFcMFwwXDBcMFwwXDFcMFwwXDBcMFwKXDBcMFwwYVwwXDBcMFwxXDFcMTWlXDBcMFwwS1wwgFwwi0BcMVwwikBAgIpAQIGKXDDBgcuAXDFcMMqAQYLKXDDCg8qAwoTKXDDDhcqAw4bKXDDEh4rAgIKKXDDBiGtAgFwwhoBEXDCHwERcMcFcMFwxXDBcMFwxgFwwpICAXDHMXDBFXDHkgFwwXDFcNFwxXDBcMOJcMFwwXDBcMzBAXDSAR0HAXDFcMzFcMMJcMlwzMIBcM4BGQUVcMIGBXDVcMGRBXDBcMVwxwVw1XDBGQUZcMEeBxlwyR8HGXDKGXDFHXDDAXDFcMFwyXDZCRlwwXDdCR1w0XDeCR1w0QcJcN1wwZIGAXDJcOEBcMYziXDBcMFwwXDMwQFw0gEdBwFwxXDMxgMJcMlwzMIBcM4BGQUVcMIFcMVw4XDBkQVwwXDFcMUFcOFwwRkFGXDBHgcZcMkfBxlwyhlwxR1wwwFwxXDBcMlw2QkZcMFw3QkdcNFw3gkhcNEHCXDdcMGSBgFwyXDhAXDGM4lwwXDBcMFwzMEBcNIBHQcBcMVwzMVwww1wyXDMwgFwzgEZBRVwwgcFcOFwwZEFcMFwxXDFcMVw5XDBGQUZcMEeBxlwyR8HGXDKGXDFHXDDAXDFcMFwyXDZCRlwwXDdCR1w0XDeCSFw0QcJcN1wwZIGAXDJcOEBcMYziXDBcMFwwXDMwQFw0gEdBwFwxXDMxgMNcMlwzMIBcM4BGQUVcMIFBXDlcMGRBXDBcMVwxQVwzXDBGQUZcMEeBxlwyR8HGXDKGXDFHXDDAXDFcMFwyXDZCRlwwXDdCR1w0XDeCR1w0QcJcN1wwZIGAXDJcOEBcMYziXDBcMFwwXDMwQFw0gEdBwFwxXDMxXDDEXDJcMzCAXDOARkFFXDCBgVw5XDBkQVwwXDFcMcFcOVwwRkFGXDBHgcZcMkfBxlwyhlwxR1wwwFwxXDBcMlw2QkZcMFw3QkdcNFw3gkhcNEHCXDdcMGSBgFwyXDhAXDGMRlwxSlwwTEHKXDJkgVwwXDGMgcpcMqSBXDBcMaJBXDBcMFwzMEBcOICHwcpcMoxcMUtcM6SBXDBcMYyBSlwzpIFcMFwxokFcMFwwXDMwgFw2gIfBylwyjFwxS1wzpIFcMFwxjEFLXDOkXDFcMVwxXDMwgFw0gIyCy1w0pIJcMFwxjMJLXDWkglwwXDGiQlwwXDBcMzBcMFwzgIxCzFw0XDGDXDEyXDCkgoBcMVw4gFwymIzCzFw0XDZcM0xcMEZcM0ZcMIRcM1wwXDCkQoBcMoxcMs1cNFwwXDNcMFwyRFwzXDBcMKRCXDBcMqlBXDBcMCqC+lwxMjcmXDCAXDAwMDVcMFwwXDBcNFw1dHlwZVw0XDlkcm9wZG93blw0XDRrZXlcNFw2dGl0bGVcNFwxOUNob29zZSBEcnVtIFBsdWdpblw0XDd2YWx1ZXNcMTlcMVwwXDBcMFwwXDBcMFwwXDRcMTVNVFBvd2VyRHJ1bUtpdFwxOVwyXDBcMFwwXDBcMFwwXDBcNFwxM1JlZCBaZXBwZWxpblwxOVwzXDBcMFwwXDBcMFwwXDBcNFwxMkJsYWNrIFBlYXJsXDE5XDRcMFwwXDBcMFwwXDBcMFw0XApCZWF0IERSTVJcMTlcNVwwXDBcMFwwXDBcMFwwXDRcMTFCbG9uZGUgQm9wXDE5XDZcMFwwXDBcMFwwXDBcMFw0XDhkZWZhdWx0XDRcCkx1YURpYWxvZ1w0XDdEaWFsb2dcNFw0cnVuXDRcNnByaW50XDRcMjZZb3UgQ2hvc2UgTVQtUG93ZXJEcnVtS2l0XDRcMTZNVC1Qb3dlckRydW1LaXRcNFw0bmV3XDRcN0FSRE9VUlw0XDdMdWFBUElcNFwxMW5ld19wbHVnaW5cNFw4U2Vzc2lvblw0XDExUGx1Z2luVHlwZVw0XDZMWFZTVFw0XDFcNFwzMVlvdSBDaG9zZSBSZWQgWmVwcGVsaW4gRHJ1bWtpdFw0XDIxUmVkIFplcHBlbGluIERydW1raXRcNFw0TFYyXDRcMzBZb3UgQ2hvc2UgQmxhY2sgUGVhcmwgRHJ1bWtpdFw0XDIwQmxhY2sgUGVhcmwgRHJ1bWtpdFw0XDIwWW91IENob3NlIEJlYXQgRFJNUlw0XDI5WW91IENob3NlIEJsb25kZSBCb3AgRHJ1bWtpdFw0XDE5QmxvbmRlIEJvcCBEcnVta2l0XDRcN0VkaXRvclw0XDE0Z2V0X3NlbGVjdGlvblw0XDZlbXB0eVw0XDd0cmFja3NcNFwKcm91dGVsaXN0XDRcNWl0ZXJcNFw5dG9fdHJhY2tcNFw2aXNuaWxcNFw0b2xkXDRcMTFudGhfcGx1Z2luXDE5XDBcMFwwXDBcMFwwXDBcMFw0XDE4cmVwbGFjZV9wcm9jZXNzb3JcNFw5c2V0X25hbWVcMVwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMCIgc2NyaXB0c1s1XVsiYSJdID0ge30gc2NyaXB0c1s1XVsiYSJdWyJ4LXNjcmlwdC1vcmlnaW4iXSA9ICIvaG9tZS9qbWFuLy5jb25maWcvYXJkb3VyNy9zY3JpcHRzL2RydW0ubHVhIiAgICBzY3JpcHRzWzZdID0ge30gc2NyaXB0c1s2XVsicyJdID0gImFyZG91ciB7XApcOVtcInR5cGVcIl0gICAgPSBcIkVkaXRvckFjdGlvblwiLFwKXDluYW1lICAgICAgICA9IFwiUmVjb3JkIE5vd1wiLFwKXDlsaWNlbnNlICAgICA9IFwiTUlUXCIsXApcOWF1dGhvciAgICAgID0gXCJBcmRvdXIgVGVhbVwiLFwKXDlkZXNjcmlwdGlvbiA9IFtbRW5nYWdlIEdsb2JhbCBSZWNvcmQtQXJtIGFuZCBQbGF5IChyZWNvcmQgLSByb2xsKV1dXAp9XApcCmZ1bmN0aW9uIGZhY3RvcnkgKCkgcmV0dXJuIGZ1bmN0aW9uICgpXApcOUVkaXRvcjphY2Nlc3NfYWN0aW9uIChcIlRyYW5zcG9ydFwiLCBcInJlY29yZC1yb2xsXCIpXAplbmQgZW5kXApcCmZ1bmN0aW9uIGljb24gKHBhcmFtcykgcmV0dXJuIGZ1bmN0aW9uIChjdHgsIHdpZHRoLCBoZWlnaHQpXApcOWxvY2FsIHggPSB3aWR0aCAqIC41XApcOWxvY2FsIHkgPSBoZWlnaHQgKiAuNVwKXDlsb2NhbCByID0gbWF0aC5taW4gKHgsIHkpICogLjQ1XApcOWxvY2FsIHAgPSBtYXRoLm1pbiAoeCwgeSkgKiAuNjVcClwKXDljdHg6bW92ZV90byAoeCAtIHAsIHkgLSBwKVwKXDljdHg6bGluZV90byAoeCAtIHAsIHkgKyBwKVwKXDljdHg6bGluZV90byAoeCwgeSlcClw5Y3R4OmNsb3NlX3BhdGggKClcClw5Y3R4OnNldF9zb3VyY2VfcmdiYSAoLjMsIC45LCAuMywgMS4pXApcOWN0eDpmaWxsX3ByZXNlcnZlICgpXApcOWN0eDpzZXRfc291cmNlX3JnYmEgKDAsIDAsIDAsIC44KVwKXDljdHg6c2V0X2xpbmVfd2lkdGggKDEpXApcOWN0eDpzdHJva2UgKClcClwKXDljdHg6YXJjICh4ICsgciwgeSwgciwgMCwgMiAqIG1hdGgucGkpXApcOWN0eDpzZXRfc291cmNlX3JnYmEgKC45LCAuMywgLjMsIDEuMClcClw5Y3R4OmZpbGxfcHJlc2VydmUgKClcClw5Y3R4OnNldF9zb3VyY2VfcmdiYSAoMCwgMCwgMCwgLjgpXApcOWN0eDpzZXRfbGluZV93aWR0aCAoMSlcClw5Y3R4OnN0cm9rZSAoKVwKZW5kIGVuZFwKIiAgc2NyaXB0c1s2XVsibiJdID0gIlJlY29yZCBOb3ciICBzY3JpcHRzWzZdWyJjIl0gPSAiXDI3THVhU1wwXDI1k1wxM1wKXDI2XApcNFw4XDRcOFw4eFZcMFwwXDBcMFwwXDBcMFwwXDBcMFwwKHdAXDFcMFwxM1wwXDBcMCNcMFwwXDBcMVwwXDJcM1wwXDBcMGxcMFwwXDBmXDBcMFwxJlwwgFwwXDBcMFwwXDBcMVwwXDBcMFwwXDBcMVwwXDBcMFwwXDEzXDBcMFwwI1wwXDBcMFwzXDBcMTRMXDBcMFwwz1wwwFwwXDE1XDFAXDFGQUBcMEeBwFwygFwxgFwxwFwxXDBcMmSBgFwxT8HAXDKGQUBcMIeBQFwzwFwxgFwxXDBcMlwwXDKkgYBcMY9cMUFcM8xBQVwwToKBXDGOglwxXDLkQVwwXDLMgUFcME6CgVwxjYJcMVwy5EFcMFwyzIFBXDBAXDKAXDGAXDJcMFwy5EFcMFwyzMFBXDDkQVwwXDHMXDFCXDBBQlwyXDCBglwyXDDBQlwyXDBcMcNcMlww5EFcMFwzzFwxQ1ww5EFcMFwxzFwxQlwwQUJcM1wwgUJcM1wwwUJcM1wwXDGDXDNcMORBXDBcM8zBQ1wwQVwyXDRcMORBgFwxzEFEXDDkQVwwXDHMgURcME1CgVwxgFwyXDBcMsBcMoBcMlwxQ1wzXDBGQ0BcMEfDxFw2T0NcM4rkQYBcM8xcMUJcMEGCXDJcMIFCXDJcMMFCXDJcMFwxw1wyXDDkQVwwXDPMXDFDXDDkQVwwXDHMXDFCXDBBQlwzXDCBQlwzXDDBQlwzXDBcMYNcM1ww5EFcMFwzzMFDXDBBXDJcNFww5EGAXDHMQURcMORBXDBcMSZcMIBcMFwyMVwwXDBcMFwzXDBcMFwwXDBcMFww4D9cNFw1bWF0aFw0XDRtaW5cM83MzMzMzNw/XDPNzMzMzMzkP1w0XDhtb3ZlX3RvXDRcOGxpbmVfdG9cNFwxMWNsb3NlX3BhdGhcNFwxNnNldF9zb3VyY2VfcmdiYVwwMDMzMzMzMzPTP1wzzczMzMzM7D9cM1wwXDBcMFwwXDBcMPA/XDRcMTRmaWxsX3ByZXNlcnZlXDE5XDBcMFwwXDBcMFwwXDBcMFwzmpmZmZmZ6T9cNFwxNXNldF9saW5lX3dpZHRoXDE5XDFcMFwwXDBcMFwwXDBcMFw0XDdzdHJva2VcNFw0YXJjXDRcM3BpXDE5XDJcMFwwXDBcMFwwXDBcMFwxXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwIiBzY3JpcHRzWzZdWyJmIl0gPSAiXDI3THVhU1wwXDI1k1wxM1wKXDI2XApcNFw4XDRcOFw4eFZcMFwwXDBcMFwwXDBcMFwwXDBcMFwwKHdAXDFcMFw5XDBcMFwwXDExXDBcMFwwXDBcMFwyXDNcMFwwXDAsXDBcMFwwJlwwXDBcMSZcMIBcMFwwXDBcMFwwXDFcMFwwXDBcMFwwXDFcMFwwXDBcMFw5XDBcMFwwXDExXDBcMFwwXDBcMFw0XDZcMFwwXDBcNlwwQFwwXDEyQEBcMIGAXDBcMMHAXDBcMCRAXDBcMiZcMIBcMFw0XDBcMFwwXDRcN0VkaXRvclw0XDE0YWNjZXNzX2FjdGlvblw0XApUcmFuc3BvcnRcNFwxMnJlY29yZC1yb2xsXDFcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDBcMFwwXDAiIHNjcmlwdHNbNl1bImEiXSA9IHt9IHNjcmlwdHNbNl1bImEiXVsieC1zY3JpcHQtb3JpZ2luIl0gPSAiL3Vzci9zaGFyZS9hcmRvdXI3L3NjcmlwdHMvcmVjb3JkX25vdy5sdWEiICAgIA==</ActionScript>
  <ActionHooks>
    <LuaCallback lua="Lua 5.3" id="573" name="Load guided menu" signals="1000000000000000000000000000000000000000000000000"></LuaCallback>
  </ActionHooks>
</UIScripts>
